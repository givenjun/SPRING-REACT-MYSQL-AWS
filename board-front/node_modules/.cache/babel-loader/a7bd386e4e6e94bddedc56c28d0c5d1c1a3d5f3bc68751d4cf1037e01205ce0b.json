{"ast":null,"code":"import'./App.css';import{Route,Routes}from'react-router-dom';import Main from'views/Main';import Authentication from'views/Authentication';import Search from'views/Search';import UserP from'views/User';import BoardDetail from'views/Board/Detail';import BoardWrite from'views/Board/Write';import BoardUpdate from'views/Board/Update';import Container from'layouts/Container';import{MAIN_PATH,AUTH_PATH,SEARCH_PATH,USER_PATH,BOARD_PATH,BOARD_WRITE_PATH,BOARD_DETAIL_PATH,BOARD_UPDATE_PATH}from'constant';import{useEffect}from'react';import{useLoginUserStore}from'stores';import{getSignInUserRequest}from'apis';import{useCookies}from'react-cookie';//          component: Application 컴포넌트         //\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){//          state: 로그인 유저 전역 상태          //\nconst{setLoginUser,resetLoginUser}=useLoginUserStore();//          state: cookie 상태          //\nconst[cookies,setCookie]=useCookies();//          function: get sign in user response 처리 함수         //\nconst getSignInUserResponse=responseBody=>{if(!responseBody)return;const{code}=responseBody;if(code==='AF'||code==='NU'||code==='DBE'){resetLoginUser();return;}const loginUser={...responseBody};setLoginUser(loginUser);};//          effect: accessToken cookie 값이 변경될 때 마다 실행할 함수         //\nuseEffect(()=>{if(!cookies.accessToken){resetLoginUser();return;}getSignInUserRequest(cookies.accessToken).then(getSignInUserResponse);},[cookies.accessToken]);//          render: Application 컴포넌트 렌더링         //\n// description: 메인 화면 : '/' - Main //\n// description: 로그인 + 회원가입 화면 : '/auth' - Authentication //\n// description: 검색 화면 : '/search/:searchWord' - Search //\n// description: 유저 페이지 화면 : '/user/:userEmail' - User //\n// description: 게시물 상세보기 화면 : '/board/detail/:boardNumber' - BoardDetail //\n// description: 게시물 작성하기 화면 : '/board/write' - BoardWrite //\n// description: 게시물 수정하기 화면 : '/board/update/:boardNumber' - BoardUpdate //\nreturn/*#__PURE__*/_jsx(Routes,{children:/*#__PURE__*/_jsxs(Route,{element:/*#__PURE__*/_jsx(Container,{}),children:[/*#__PURE__*/_jsx(Route,{path:MAIN_PATH(),element:/*#__PURE__*/_jsx(Main,{})}),/*#__PURE__*/_jsx(Route,{path:AUTH_PATH(),element:/*#__PURE__*/_jsx(Authentication,{})}),/*#__PURE__*/_jsx(Route,{path:SEARCH_PATH(':searchWord'),element:/*#__PURE__*/_jsx(Search,{})}),/*#__PURE__*/_jsx(Route,{path:USER_PATH(':userEmail'),element:/*#__PURE__*/_jsx(UserP,{})}),/*#__PURE__*/_jsxs(Route,{path:BOARD_PATH(),children:[/*#__PURE__*/_jsx(Route,{path:BOARD_WRITE_PATH(),element:/*#__PURE__*/_jsx(BoardWrite,{})}),/*#__PURE__*/_jsx(Route,{path:BOARD_DETAIL_PATH(':boardNumber'),element:/*#__PURE__*/_jsx(BoardDetail,{})}),/*#__PURE__*/_jsx(Route,{path:BOARD_UPDATE_PATH(':boardNumber'),element:/*#__PURE__*/_jsx(BoardUpdate,{})})]}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(\"h1\",{children:\"404 Not Found\"})})]})});}export default App;","map":{"version":3,"names":["Route","Routes","Main","Authentication","Search","UserP","BoardDetail","BoardWrite","BoardUpdate","Container","MAIN_PATH","AUTH_PATH","SEARCH_PATH","USER_PATH","BOARD_PATH","BOARD_WRITE_PATH","BOARD_DETAIL_PATH","BOARD_UPDATE_PATH","useEffect","useLoginUserStore","getSignInUserRequest","useCookies","jsx","_jsx","jsxs","_jsxs","App","setLoginUser","resetLoginUser","cookies","setCookie","getSignInUserResponse","responseBody","code","loginUser","accessToken","then","children","element","path"],"sources":["C:/Users/정준/Documents/spring-react-mysql/board-front/src/App.tsx"],"sourcesContent":["import './App.css';\nimport { Route, Routes } from 'react-router-dom';\nimport Main from 'views/Main';\nimport Authentication from 'views/Authentication';\nimport Search from 'views/Search';\nimport UserP from 'views/User';\nimport BoardDetail from 'views/Board/Detail';\nimport BoardWrite from 'views/Board/Write';\nimport BoardUpdate from 'views/Board/Update';\nimport Container from 'layouts/Container';\nimport { MAIN_PATH, AUTH_PATH, SEARCH_PATH, USER_PATH, BOARD_PATH, BOARD_WRITE_PATH, BOARD_DETAIL_PATH, BOARD_UPDATE_PATH } from 'constant';\nimport { useEffect } from 'react';\nimport { useLoginUserStore } from 'stores';\nimport { getSignInUserRequest } from 'apis';\nimport { GetSignInUserResponseDto } from 'apis/response/user';\nimport { ResponseDto } from 'apis/response';\nimport { User } from 'types/interface';\nimport { useCookies } from 'react-cookie';\n\n\n//          component: Application 컴포넌트         //\nfunction App() {\n\n  //          state: 로그인 유저 전역 상태          //\n  const { setLoginUser, resetLoginUser } = useLoginUserStore();\n  //          state: cookie 상태          //\n  const [cookies, setCookie] = useCookies();\n  //          function: get sign in user response 처리 함수         //\n  const getSignInUserResponse = (responseBody: GetSignInUserResponseDto | ResponseDto | null) => {\n    if (!responseBody) return;\n    const { code } = responseBody;\n    if (code === 'AF' || code === 'NU' || code === 'DBE') {\n      resetLoginUser();\n      return;\n    }\n    const loginUser: User = { ...(responseBody as GetSignInUserResponseDto) };\n    setLoginUser(loginUser);\n  }\n\n  //          effect: accessToken cookie 값이 변경될 때 마다 실행할 함수         //\n  useEffect(() => {\n    if (!cookies.accessToken) {\n      resetLoginUser();\n      return;\n    }\n    getSignInUserRequest(cookies.accessToken).then(getSignInUserResponse)\n  }, [cookies.accessToken]);\n\n  //          render: Application 컴포넌트 렌더링         //\n  // description: 메인 화면 : '/' - Main //\n  // description: 로그인 + 회원가입 화면 : '/auth' - Authentication //\n  // description: 검색 화면 : '/search/:searchWord' - Search //\n  // description: 유저 페이지 화면 : '/user/:userEmail' - User //\n  // description: 게시물 상세보기 화면 : '/board/detail/:boardNumber' - BoardDetail //\n  // description: 게시물 작성하기 화면 : '/board/write' - BoardWrite //\n  // description: 게시물 수정하기 화면 : '/board/update/:boardNumber' - BoardUpdate //\n  return (\n    <Routes>\n      <Route element={<Container />}>\n        <Route path={MAIN_PATH()} element={<Main />} />\n        <Route path={AUTH_PATH()} element={<Authentication />} />\n        <Route path={SEARCH_PATH(':searchWord')} element={<Search />} />\n        <Route path={USER_PATH(':userEmail')} element={<UserP />} />\n        <Route path={BOARD_PATH()}>\n          <Route path={BOARD_WRITE_PATH()} element={<BoardWrite />} />\n          <Route path={BOARD_DETAIL_PATH(':boardNumber')} element={<BoardDetail />} />\n          <Route path={BOARD_UPDATE_PATH(':boardNumber')} element={<BoardUpdate />} />\n        </Route>\n        <Route path='*' element={<h1>404 Not Found</h1>}></Route>\n      </Route>\n    </Routes>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,WAAW,CAClB,OAASA,KAAK,CAAEC,MAAM,KAAQ,kBAAkB,CAChD,MAAO,CAAAC,IAAI,KAAM,YAAY,CAC7B,MAAO,CAAAC,cAAc,KAAM,sBAAsB,CACjD,MAAO,CAAAC,MAAM,KAAM,cAAc,CACjC,MAAO,CAAAC,KAAK,KAAM,YAAY,CAC9B,MAAO,CAAAC,WAAW,KAAM,oBAAoB,CAC5C,MAAO,CAAAC,UAAU,KAAM,mBAAmB,CAC1C,MAAO,CAAAC,WAAW,KAAM,oBAAoB,CAC5C,MAAO,CAAAC,SAAS,KAAM,mBAAmB,CACzC,OAASC,SAAS,CAAEC,SAAS,CAAEC,WAAW,CAAEC,SAAS,CAAEC,UAAU,CAAEC,gBAAgB,CAAEC,iBAAiB,CAAEC,iBAAiB,KAAQ,UAAU,CAC3I,OAASC,SAAS,KAAQ,OAAO,CACjC,OAASC,iBAAiB,KAAQ,QAAQ,CAC1C,OAASC,oBAAoB,KAAQ,MAAM,CAI3C,OAASC,UAAU,KAAQ,cAAc,CAGzC;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,QAAS,CAAAC,GAAGA,CAAA,CAAG,CAEb;AACA,KAAM,CAAEC,YAAY,CAAEC,cAAe,CAAC,CAAGT,iBAAiB,CAAC,CAAC,CAC5D;AACA,KAAM,CAACU,OAAO,CAAEC,SAAS,CAAC,CAAGT,UAAU,CAAC,CAAC,CACzC;AACA,KAAM,CAAAU,qBAAqB,CAAIC,YAA2D,EAAK,CAC7F,GAAI,CAACA,YAAY,CAAE,OACnB,KAAM,CAAEC,IAAK,CAAC,CAAGD,YAAY,CAC7B,GAAIC,IAAI,GAAK,IAAI,EAAIA,IAAI,GAAK,IAAI,EAAIA,IAAI,GAAK,KAAK,CAAE,CACpDL,cAAc,CAAC,CAAC,CAChB,OACF,CACA,KAAM,CAAAM,SAAe,CAAG,CAAE,GAAIF,YAA0C,CAAC,CACzEL,YAAY,CAACO,SAAS,CAAC,CACzB,CAAC,CAED;AACAhB,SAAS,CAAC,IAAM,CACd,GAAI,CAACW,OAAO,CAACM,WAAW,CAAE,CACxBP,cAAc,CAAC,CAAC,CAChB,OACF,CACAR,oBAAoB,CAACS,OAAO,CAACM,WAAW,CAAC,CAACC,IAAI,CAACL,qBAAqB,CAAC,CACvE,CAAC,CAAE,CAACF,OAAO,CAACM,WAAW,CAAC,CAAC,CAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBACEZ,IAAA,CAACtB,MAAM,EAAAoC,QAAA,cACLZ,KAAA,CAACzB,KAAK,EAACsC,OAAO,cAAEf,IAAA,CAACd,SAAS,GAAE,CAAE,CAAA4B,QAAA,eAC5Bd,IAAA,CAACvB,KAAK,EAACuC,IAAI,CAAE7B,SAAS,CAAC,CAAE,CAAC4B,OAAO,cAAEf,IAAA,CAACrB,IAAI,GAAE,CAAE,CAAE,CAAC,cAC/CqB,IAAA,CAACvB,KAAK,EAACuC,IAAI,CAAE5B,SAAS,CAAC,CAAE,CAAC2B,OAAO,cAAEf,IAAA,CAACpB,cAAc,GAAE,CAAE,CAAE,CAAC,cACzDoB,IAAA,CAACvB,KAAK,EAACuC,IAAI,CAAE3B,WAAW,CAAC,aAAa,CAAE,CAAC0B,OAAO,cAAEf,IAAA,CAACnB,MAAM,GAAE,CAAE,CAAE,CAAC,cAChEmB,IAAA,CAACvB,KAAK,EAACuC,IAAI,CAAE1B,SAAS,CAAC,YAAY,CAAE,CAACyB,OAAO,cAAEf,IAAA,CAAClB,KAAK,GAAE,CAAE,CAAE,CAAC,cAC5DoB,KAAA,CAACzB,KAAK,EAACuC,IAAI,CAAEzB,UAAU,CAAC,CAAE,CAAAuB,QAAA,eACxBd,IAAA,CAACvB,KAAK,EAACuC,IAAI,CAAExB,gBAAgB,CAAC,CAAE,CAACuB,OAAO,cAAEf,IAAA,CAAChB,UAAU,GAAE,CAAE,CAAE,CAAC,cAC5DgB,IAAA,CAACvB,KAAK,EAACuC,IAAI,CAAEvB,iBAAiB,CAAC,cAAc,CAAE,CAACsB,OAAO,cAAEf,IAAA,CAACjB,WAAW,GAAE,CAAE,CAAE,CAAC,cAC5EiB,IAAA,CAACvB,KAAK,EAACuC,IAAI,CAAEtB,iBAAiB,CAAC,cAAc,CAAE,CAACqB,OAAO,cAAEf,IAAA,CAACf,WAAW,GAAE,CAAE,CAAE,CAAC,EACvE,CAAC,cACRe,IAAA,CAACvB,KAAK,EAACuC,IAAI,CAAC,GAAG,CAACD,OAAO,cAAEf,IAAA,OAAAc,QAAA,CAAI,eAAa,CAAI,CAAE,CAAQ,CAAC,EACpD,CAAC,CACF,CAAC,CAEb,CAEA,cAAe,CAAAX,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}