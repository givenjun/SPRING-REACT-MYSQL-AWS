{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC815\\uC900\\\\Documents\\\\spring-react-mysql\\\\board-front\\\\src\\\\views\\\\Authentication\\\\index.tsx\",\n  _s3 = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport './style.css';\nimport InputBox from 'components/InputBox';\nimport { signInRequest } from 'apis';\nimport { useCookies } from 'react-cookie';\nimport { MAIN_PATH } from 'constant';\nimport { useNavigate } from 'react-router-dom';\nimport { useDaumPostcodePopup } from 'react-daum-postcode';\n\n//          component: 인증 화면 컴포넌트          //\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Authentication() {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  //          state: 화면 상태          //\n  const [view, setView] = useState('sign-in');\n\n  //          state: 쿠키 상태          //\n  const [cookies, setCookie] = useCookies();\n\n  //           function: 네비게이트 함수          //\n  const navigator = useNavigate();\n\n  //          component: sign in card 컴포넌트          //\n  const SignInCard = () => {\n    _s();\n    //          state: 이메일 요소 참조 상태          //\n    const emailRef = useRef(null);\n    //          state: 패스워드 요소 참조 상태          //\n    const passwordRef = useRef(null);\n    //          state: 이메일 상태          //\n    const [email, setEmail] = useState('');\n    //          state: 패스워드 상태          //\n    const [password, setPassword] = useState('');\n    //          state: 패스워드 타입 상태          //\n    const [passwordType, setPasswordType] = useState('password');\n    //          state: 패스워드 버튼 아이콘 상태          //\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState('eye-light-off-icon');\n    //          state: 에러 상태          //\n    const [error, setError] = useState(false);\n\n    //          function: sign in response 처리 함수           //\n    const signInResponse = responseBody => {\n      if (!responseBody) {\n        alert('네트워크 이상입니다.');\n        return;\n      }\n      const {\n        code\n      } = responseBody;\n      if (code === 'DBE') alert('데이터베이스 오류입니다.');\n      if (code === 'SF' || code === 'VF') setError(true);\n      if (code !== 'SU') return;\n      const {\n        token,\n        expirationTime\n      } = responseBody;\n      const now = new Date().getTime();\n      const expires = new Date(now + expirationTime * 1000);\n      setCookie('accessToken', token, {\n        expires,\n        path: MAIN_PATH()\n      });\n      navigator(MAIN_PATH());\n    };\n\n    //          event handler: 이메일 변경 이벤트 처리 함수          //\n    const onEmailChangeHandler = event => {\n      setError(false);\n      const {\n        value\n      } = event.target;\n      setEmail(value);\n    };\n    //          event handler: 패스워드 변경 이벤트 처리 함수          //\n    const onPasswordChangeHandler = event => {\n      setError(false);\n      const {\n        value\n      } = event.target;\n      setPassword(value);\n    };\n    //          event handler: 로그인 버튼 클릭 이벤트 처리 함수          //\n    const onSignInButtonClickHandler = () => {\n      const requestBody = {\n        email,\n        password\n      };\n      signInRequest(requestBody).then(signInResponse);\n    };\n    //          event handler: 회원가입 링크 클릭 이벤트 처리 함수          //\n    const onSignUpLinkClickHandler = () => {\n      setView('sign-up');\n    };\n    //          event handler: 패스워드 버튼 클릭 이벤트 처리 함수          //\n    const onPasswordButtonClickHandler = () => {\n      if (passwordType === 'text') {\n        setPasswordType('password');\n        setPasswordButtonIcon('eye-light-off-icon');\n      } else {\n        setPasswordType('text');\n        setPasswordButtonIcon('eye-light-on-icon');\n      }\n    };\n    //          event handler: 이메일 인풋 키 다운 이벤트 처리 함수          //\n    const onEmailKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      if (!passwordRef.current) return;\n      passwordRef.current.focus();\n    };\n    //          event handler: 패스워드 인풋 키 다운 이벤트 처리 함수          //\n    const onPasswordKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      onSignInButtonClickHandler();\n    };\n\n    //          render: sign in card 컴포넌트 렌더링          //  \n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-card-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-card-title-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-card-title\",\n              children: '로그인'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n            ref: emailRef,\n            label: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\",\n            type: \"text\",\n            placeholder: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n            error: error,\n            value: email,\n            onChange: onEmailChangeHandler,\n            onKeyDown: onEmailKeyDownHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n            ref: passwordRef,\n            label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n            type: passwordType,\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n            error: error,\n            value: password,\n            onChange: onPasswordChangeHandler,\n            icon: passwordButtonIcon,\n            onButtonClick: onPasswordButtonClickHandler,\n            onKeyDown: onPasswordKeyDownHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-bottom\",\n          children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-sign-in-error-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-sign-in-error-message\",\n              children: '이메일 주소 또는 비밀번호를 잘못 입력했습니다.\\n입력하신 내용을 다시 확인해주세요.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"black-large-full-button\",\n            onClick: onSignInButtonClickHandler,\n            children: '로그인'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-description-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-description\",\n              children: ['신규 사용자 이신가요? ', /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"auth-description-link\",\n                onClick: onSignUpLinkClickHandler,\n                children: '회원가입'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  };\n\n  //          component: sign up card 컴포넌트          //\n  _s(SignInCard, \"+MankW9kCs+nZSw2btqK0txeSEY=\");\n  const SignUpCard = () => {\n    _s2();\n    //          state: 이메일 요소 참조 상태          //\n    const emailRef = useRef(null);\n    //          state: 패스워드 요소 참조 상태          //\n    const passwordRef = useRef(null);\n    //          state: 패스워드 확인 요소 참조 상태          //\n    const passwordCheckRef = useRef(null);\n    //          state: 닉네임 요소 참조 상태          //\n    const nicknameRef = useRef(null);\n    //          state: 전화번호 요소 참조 상태          //\n    const telNumberRef = useRef(null);\n    //          state: 주소 요소 참조 상태          //\n    const addressRef = useRef(null);\n    //          state: 상세 주소 요소 참조 상태          //\n    const addressDetailRef = useRef(null);\n\n    //          state: 페이지 번호 상태           //\n    const [page, setPage] = useState(2);\n\n    //          state: 이메일 상태           //\n    const [email, setEmail] = useState('');\n    //          state: 패스워드 상태           //\n    const [password, setPassword] = useState('');\n    //          state: 패스워드 확인 상태           //\n    const [passwordCheck, setPasswordCheck] = useState('');\n    //          state: 닉네임 상태           //\n    const [nickname, setNickname] = useState('');\n    //          state: 휴대전화번호 상태           //\n    const [telNumber, setTelNumber] = useState('');\n    //          state: 주소 상태           //\n    const [address, setAddress] = useState('');\n    //          state: 상세 주소 상태           //\n    const [addressDetail, setAddressDetail] = useState('');\n    //          state: 개인 정보 동의 상태           //\n    const [agreedPersonal, setAgreedPersonal] = useState(false);\n\n    //          state: 패스워드 타입 상태           //\n    const [passwordType, setPasswordType] = useState('password');\n    //          state: 패스워드 확인 타입 상태           //\n    const [passwordCheckType, setPasswordCheckType] = useState('password');\n\n    //          state: 이메일 에러 상태           //\n    const [isEmailError, setEmailError] = useState(false);\n    //          state: 패스워드 에러 상태           //\n    const [isPasswordError, setPasswordError] = useState(false);\n    //          state: 패스워드 확인 에러 상태           //\n    const [isPasswordCheckError, setPasswordCheckError] = useState(false);\n    //          state: 닉네임 에러 상태           //\n    const [isNicknameError, setNicknameError] = useState(false);\n    //          state: 휴대전화번호 에러 상태           //\n    const [isTelNumberError, setTelNumberError] = useState(false);\n    //          state: 주소 에러 상태           //\n    const [isAddressError, setAddressError] = useState(false);\n    //          state: 개인 정보 동의 에러 상태           //\n    const [isAgreedPersonalError, setAgreedPersonalError] = useState(false);\n\n    //          state: 이메일 에러 메시지 상태           //\n    const [emailErrorMessage, setEmailErrorMessage] = useState('');\n    //          state: 패스워드 에러 메시지 상태           //\n    const [passwordErrorMessage, setPasswordErrorMessage] = useState('');\n    //          state: 패스워드 확인 에러 메시지 상태           //\n    const [passwordCheckErrorMessage, setPasswordCheckErrorMessage] = useState('');\n    //          state: 닉네임 에러 메시지 상태           //\n    const [nicknameErrorMessage, setNicknameErrorMessage] = useState('');\n    //          state: 휴대전호번호 에러 메시지 상태           //\n    const [telNumberErrorMessage, setTelNumberErrorMessage] = useState('');\n    //          state: 주소 에러 메시지 상태           //\n    const [addressErrorMessage, setAddressErrorMessage] = useState('');\n\n    //          state: 패스워드 버튼 아이콘 상태          //\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState('eye-light-off-icon');\n    //          state: 패스워드 확인 버튼 아이콘 상태          //\n    const [passwordCheckButtonIcon, setPasswordCheckButtonIcon] = useState('eye-light-off-icon');\n\n    //          function: 다음 주소 검색 팝업 오픈 함수          //\n    const open = useDaumPostcodePopup();\n\n    //          event handler: 이메일 변경 이벤트 처리 함수          //\n    const onEmailChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setEmail(value);\n      setEmailError(false);\n      setEmailErrorMessage('');\n    };\n    //          event handler: 패스워드 변경 이벤트 처리 함수          //\n    const onPasswordChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setPassword(value);\n      setPasswordError(false);\n      setPasswordErrorMessage('');\n    };\n    //          event handler: 패스워드 확인 변경 이벤트 처리 함수          //\n    const onPasswordCheckChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setPasswordCheck(value);\n      setPasswordCheckError(false);\n      setPasswordCheckErrorMessage('');\n    };\n    //          event handler: 닉네임 변경 이벤트 처리 함수          //\n    const onNicknamehangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setNickname(value);\n      setNicknameError(false);\n      setNicknameErrorMessage('');\n    };\n    //          event handler: 휴대전화번호 변경 이벤트 처리 함수          //\n    const onTelNumberChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setTelNumber(value);\n      setTelNumberError(false);\n      setTelNumberErrorMessage('');\n    };\n    //          event handler: 주소 변경 이벤트 처리 함수          //\n    const onAddressChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setAddress(value);\n      setAddressError(false);\n      setAddressErrorMessage('');\n    };\n    //          event handler: 상세 주소 변경 이벤트 처리 함수          //\n    const onAddressDetailChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setAddressDetail(value);\n    };\n\n    //          event handler: 개인 정보 동의 체크 박스 클릭 이벤트 처리 함수          //\n    const onAgreedPersonalClickHandler = () => {\n      setAgreedPersonal(!agreedPersonal);\n      setAgreedPersonalError(false);\n    };\n    //          event handler: 패스워드 버튼 클릭 이벤트 처리 함수          //\n    const onPasswordButtonClickHandler = () => {\n      if (passwordButtonIcon === 'eye-light-off-icon') {\n        setPasswordButtonIcon('eye-light-on-icon');\n        setPasswordType('text');\n      } else {\n        setPasswordButtonIcon('eye-light-off-icon');\n        setPasswordType('password');\n      }\n    };\n    //          event handler: 패스워드 확인 버튼 클릭 이벤트 처리 함수          //\n    const onPasswordCheckButtonClickHandler = () => {\n      if (passwordCheckButtonIcon === 'eye-light-off-icon') {\n        setPasswordCheckButtonIcon('eye-light-on-icon');\n        setPasswordCheckType('text');\n      } else {\n        setPasswordCheckButtonIcon('eye-light-off-icon');\n        setPasswordCheckType('password');\n      }\n    };\n    //          event handler: 주소 버튼 클릭 이벤트 처리 함수          //\n    const onAddressButtonClickHandler = () => {\n      open({\n        onComplete\n      });\n    };\n    //          event handler: 다음단계 버튼 클릭 이벤트 처리 함수          //\n    const onNextButtonClickHandler = () => {\n      const isEmailBlank = email.trim().length !== 0;\n      if (!isEmailBlank) {\n        setEmailError(true);\n        setEmailErrorMessage('이메일을 입력해주세요.');\n      }\n      const emailPattern = /^[a-zA-Z0-9]*@([-.]?[a-zA-Z0-9])*\\.[a-zA-z]{2,4}$/;\n      const isEmailPattern = emailPattern.test(email);\n      if (isEmailBlank && !isEmailPattern) {\n        setEmailError(true);\n        setEmailErrorMessage('이메일 주소 포맷이 맞지 않습니다.');\n      }\n      const isPasswordBlank = password.trim().length !== 0;\n      if (!isPasswordBlank) {\n        setPasswordError(true);\n        setPasswordErrorMessage('비밀번호를 입력해주세요.');\n      }\n      const isCheckedPassword = password.trim().length > 8;\n      if (isPasswordBlank && !isCheckedPassword) {\n        setPasswordError(true);\n        setPasswordErrorMessage('비밀번호는 8자 이상 입력해주세요.');\n      }\n      const isPasswordCheckBlank = password.trim().length !== 0;\n      if (!isPasswordCheckBlank) {\n        setPasswordCheckError(false);\n        setPasswordCheckErrorMessage('');\n      }\n      const isEqualPassword = password === passwordCheck;\n      if (isPasswordCheckBlank && !isEqualPassword) {\n        setPasswordCheckError(true);\n        setPasswordCheckErrorMessage('비밀번호가 일치하지 않습니다.');\n      }\n      if (!isEmailPattern || !isCheckedPassword || !isEqualPassword) return;\n      setPage(2);\n    };\n    //          event handler: 회원가입 버튼 클릭 이벤트 처리 함수          //\n    const onSignUpButtonClickHandler = () => {\n      const isEmailBlank = email.trim().length !== 0;\n      if (!isEmailBlank) {\n        setEmailError(true);\n        setEmailErrorMessage('이메일을 입력해주세요.');\n      }\n      const emailPattern = /^[a-zA-Z0-9]*@([-.]?[a-zA-Z0-9])*\\.[a-zA-z]{2,4}$/;\n      const isEmailPattern = emailPattern.test(email);\n      if (isEmailBlank && !isEmailPattern) {\n        setEmailError(true);\n        setEmailErrorMessage('이메일 주소 포맷이 맞지 않습니다.');\n      }\n      const isPasswordBlank = password.trim().length !== 0;\n      if (!isPasswordBlank) {\n        setPasswordError(true);\n        setPasswordErrorMessage('비밀번호를 입력해주세요.');\n      }\n      const isCheckedPassword = password.trim().length > 8;\n      if (isPasswordBlank && !isCheckedPassword) {\n        setPasswordError(true);\n        setPasswordErrorMessage('비밀번호는 8자 이상 입력해주세요.');\n      }\n      const isPasswordCheckBlank = password.trim().length !== 0;\n      if (!isPasswordCheckBlank) {\n        setPasswordCheckError(false);\n        setPasswordCheckErrorMessage('');\n      }\n      const isEqualPassword = password === passwordCheck;\n      if (isPasswordCheckBlank && !isEqualPassword) {\n        setPasswordCheckError(true);\n        setPasswordCheckErrorMessage('비밀번호가 일치하지 않습니다.');\n      }\n      if (!isEmailPattern || !isCheckedPassword || !isEqualPassword) {\n        setPage(1);\n        return;\n      }\n      const isNicknameBlank = nickname.length !== 0;\n      if (!isNicknameBlank) {\n        setNicknameError(true);\n        setNicknameErrorMessage('닉네임을 입력해주세요.');\n      }\n      const telNumberPattern = /^[0-9]{11,13}$/;\n      if (!telNumberPattern) {\n        setNicknameError(true);\n        setNicknameErrorMessage('숫자만 입력해주세요.');\n      }\n    };\n    //          event handler: 로그인 링크 클릭 이벤트 처리 함수          //\n    const onSignInLinkClickHandler = () => {\n      setView('sign-in');\n    };\n    //          event handler: 이메일 키 다운 이벤트 처리 함수          //\n    const onEmailKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      if (!passwordRef.current) return;\n      passwordRef.current.focus();\n    };\n    //          event handler: 패스워드 키 다운 이벤트 처리 함수          //\n    const onPasswordKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      if (!passwordCheckRef.current) return;\n      passwordCheckRef.current.focus();\n    };\n    //          event handler: 패스워드 확인 키 다운 이벤트 처리 함수          //\n    const onPasswordCheckKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      if (!nicknameRef.current) return;\n      onNextButtonClickHandler();\n      nicknameRef.current.focus();\n    };\n    //          event handler: 닉네임 키 다운 이벤트 처리 함수          //\n    const onNicknameKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      if (!telNumberRef.current) return;\n      telNumberRef.current.focus();\n    };\n    //          event handler: 휴대전화번호 키 다운 이벤트 처리 함수          //\n    const onTelNumberKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      onAddressButtonClickHandler();\n    };\n    //          event handler: 주소 키 다운 이벤트 처리 함수          //\n    const onAddressKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      if (!addressDetailRef.current) return;\n      addressDetailRef.current.focus();\n    };\n    //          event handler: 상세 주소 키 다운 이벤트 처리 함수          //\n    const onAddressDetailKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      onSignUpButtonClickHandler();\n    };\n\n    //          event handler: 다음 주소 검색 완료 이벤트 처리 함수          //\n    const onComplete = data => {\n      const {\n        address\n      } = data;\n      setAddress(address);\n      if (!addressDetailRef.current) return;\n      addressDetailRef.current.focus();\n    };\n\n    //          render: sign up card 컴포넌트 렌더링          //  \n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-card-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-card-title-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-card-title\",\n              children: '회원가입'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-card-page\",\n              children: `${page}/2`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 13\n          }, this), page === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(InputBox, {\n              ref: emailRef,\n              label: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C*\",\n              type: \"text\",\n              placeholder: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n              value: email,\n              onChange: onEmailChangeHandler,\n              error: isEmailError,\n              message: emailErrorMessage,\n              onKeyDown: onEmailKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: passwordRef,\n              label: \"\\uBE44\\uBC00\\uBC88\\uD638*\",\n              type: passwordType,\n              placeholder: \"\\uD328\\uC2A4\\uC6CC\\uB4DC\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n              value: password,\n              onChange: onPasswordChangeHandler,\n              error: isPasswordError,\n              message: passwordErrorMessage,\n              icon: passwordButtonIcon,\n              onButtonClick: onPasswordButtonClickHandler,\n              onKeyDown: onPasswordKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: passwordCheckRef,\n              label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778*\",\n              type: passwordCheckType,\n              placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uB2E4\\uC2DC \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n              value: passwordCheck,\n              onChange: onPasswordCheckChangeHandler,\n              error: isPasswordCheckError,\n              message: passwordCheckErrorMessage,\n              icon: passwordCheckButtonIcon,\n              onButtonClick: onPasswordCheckButtonClickHandler,\n              onKeyDown: onPasswordCheckKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true), page === 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(InputBox, {\n              ref: nicknameRef,\n              label: \"\\uB2C9\\uB124\\uC784*\",\n              type: \"text\",\n              placeholder: \"\\uB2C9\\uB124\\uC784\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n              value: nickname,\n              onChange: onNicknamehangeHandler,\n              error: isNicknameError,\n              message: nicknameErrorMessage,\n              onKeyDown: onNicknameKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: telNumberRef,\n              label: \"\\uD734\\uB300\\uC804\\uD654 \\uBC88\\uD638*\",\n              type: \"text\",\n              placeholder: \"\\uD734\\uB300\\uC804\\uD654\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n              value: telNumber,\n              onChange: onTelNumberChangeHandler,\n              error: isTelNumberError,\n              message: telNumberErrorMessage,\n              onKeyDown: onTelNumberKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: addressRef,\n              label: \"\\uC8FC\\uC18C*\",\n              type: \"text\",\n              placeholder: \"\\uC6B0\\uD3B8\\uBC88\\uD638 \\uCC3E\\uAE30\",\n              value: address,\n              onChange: onAddressChangeHandler,\n              error: isAddressError,\n              message: addressErrorMessage,\n              icon: \"expand-right-light-icon\",\n              onButtonClick: onAddressButtonClickHandler,\n              onKeyDown: onAddressKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: addressDetailRef,\n              label: \"\\uC0C1\\uC138 \\uC8FC\\uC18C\",\n              type: \"text\",\n              placeholder: \"\\uC0C1\\uC138 \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n              value: addressDetail,\n              onChange: onAddressDetailChangeHandler,\n              error: false,\n              onKeyDown: onAddressDetailKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-bottom\",\n          children: [page === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"black-large-full-button\",\n            onClick: onNextButtonClickHandler,\n            children: '다음 단계'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 15\n          }, this), page === 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-consent-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"auth-check-box\",\n                onClick: onAgreedPersonalClickHandler,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `icon ${agreedPersonal ? 'check-round-fill-icon' : 'check-ring-light-icon'}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: isAgreedPersonalError ? 'auth-consent-title-error' : 'auth-consent-title',\n                children: '개인정보동의'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"auth-consent-link\",\n                children: '더보기 >'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"black-large-full-button\",\n              onClick: onSignUpButtonClickHandler,\n              children: '회원가입'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-description-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-description\",\n              children: ['이미 계정이 있으신가요? ', /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"auth-description-link\",\n                onClick: onSignInLinkClickHandler,\n                children: '로그인'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 67\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 7\n    }, this);\n  };\n\n  //          render: 인증 화면 컴포넌트 렌더링          //  \n  _s2(SignUpCard, \"OVadGmdFeISllo/6LUD1AOX5cqQ=\", false, function () {\n    return [useDaumPostcodePopup];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"auth-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-jumbotron-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-jumbotron-contents\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-logo-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-jumbotron-text-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-jumbotron-text\",\n              children: '환영합니다'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-jumbotron-text\",\n              children: 'Jun\\'s Board 입니다.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 9\n      }, this), view === 'sign-in' && /*#__PURE__*/_jsxDEV(SignInCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 32\n      }, this), view === 'sign-up' && /*#__PURE__*/_jsxDEV(SignUpCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 488,\n    columnNumber: 5\n  }, this);\n}\n_s3(Authentication, \"zIaBD6S+jyQrc6B1KlJWIWg82KY=\", false, function () {\n  return [useCookies, useNavigate];\n});\n_c = Authentication;\n;\nvar _c;\n$RefreshReg$(_c, \"Authentication\");","map":{"version":3,"names":["React","useRef","useState","InputBox","signInRequest","useCookies","MAIN_PATH","useNavigate","useDaumPostcodePopup","jsxDEV","_jsxDEV","Fragment","_Fragment","Authentication","_s3","_s","$RefreshSig$","_s2","view","setView","cookies","setCookie","navigator","SignInCard","emailRef","passwordRef","email","setEmail","password","setPassword","passwordType","setPasswordType","passwordButtonIcon","setPasswordButtonIcon","error","setError","signInResponse","responseBody","alert","code","token","expirationTime","now","Date","getTime","expires","path","onEmailChangeHandler","event","value","target","onPasswordChangeHandler","onSignInButtonClickHandler","requestBody","then","onSignUpLinkClickHandler","onPasswordButtonClickHandler","onEmailKeyDownHandler","key","current","focus","onPasswordKeyDownHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","label","type","placeholder","onChange","onKeyDown","icon","onButtonClick","onClick","SignUpCard","passwordCheckRef","nicknameRef","telNumberRef","addressRef","addressDetailRef","page","setPage","passwordCheck","setPasswordCheck","nickname","setNickname","telNumber","setTelNumber","address","setAddress","addressDetail","setAddressDetail","agreedPersonal","setAgreedPersonal","passwordCheckType","setPasswordCheckType","isEmailError","setEmailError","isPasswordError","setPasswordError","isPasswordCheckError","setPasswordCheckError","isNicknameError","setNicknameError","isTelNumberError","setTelNumberError","isAddressError","setAddressError","isAgreedPersonalError","setAgreedPersonalError","emailErrorMessage","setEmailErrorMessage","passwordErrorMessage","setPasswordErrorMessage","passwordCheckErrorMessage","setPasswordCheckErrorMessage","nicknameErrorMessage","setNicknameErrorMessage","telNumberErrorMessage","setTelNumberErrorMessage","addressErrorMessage","setAddressErrorMessage","passwordCheckButtonIcon","setPasswordCheckButtonIcon","open","onPasswordCheckChangeHandler","onNicknamehangeHandler","onTelNumberChangeHandler","onAddressChangeHandler","onAddressDetailChangeHandler","onAgreedPersonalClickHandler","onPasswordCheckButtonClickHandler","onAddressButtonClickHandler","onComplete","onNextButtonClickHandler","isEmailBlank","trim","length","emailPattern","isEmailPattern","test","isPasswordBlank","isCheckedPassword","isPasswordCheckBlank","isEqualPassword","onSignUpButtonClickHandler","isNicknameBlank","telNumberPattern","onSignInLinkClickHandler","onPasswordCheckKeyDownHandler","onNicknameKeyDownHandler","onTelNumberKeyDownHandler","onAddressKeyDownHandler","onAddressDetailKeyDownHandler","data","message","id","_c","$RefreshReg$"],"sources":["C:/Users/정준/Documents/spring-react-mysql/board-front/src/views/Authentication/index.tsx"],"sourcesContent":["import React, { ChangeEvent, KeyboardEvent, useRef, useState } from 'react'\r\nimport './style.css'\r\nimport InputBox from 'components/InputBox';\r\nimport { SignInRequestDto } from 'apis/request/auth';\r\nimport { signInRequest } from 'apis';\r\nimport { SignInResponseDto } from 'apis/response/auth';\r\nimport { ResponseDto } from 'apis/response';\r\nimport { useCookies } from 'react-cookie';\r\nimport { MAIN_PATH } from 'constant';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Address, useDaumPostcodePopup } from 'react-daum-postcode';\r\n\r\n//          component: 인증 화면 컴포넌트          //\r\nexport default function Authentication() {\r\n\r\n  //          state: 화면 상태          //\r\n  const [view, setView] = useState<'sign-in' | 'sign-up'>('sign-in')\r\n\r\n  //          state: 쿠키 상태          //\r\n  const [ cookies, setCookie] = useCookies();\r\n\r\n  //           function: 네비게이트 함수          //\r\n  const navigator = useNavigate();\r\n\r\n  //          component: sign in card 컴포넌트          //\r\n  const SignInCard = () => {\r\n\r\n    //          state: 이메일 요소 참조 상태          //\r\n    const emailRef = useRef<HTMLInputElement | null>(null);\r\n    //          state: 패스워드 요소 참조 상태          //\r\n    const passwordRef = useRef<HTMLInputElement | null>(null);\r\n    //          state: 이메일 상태          //\r\n    const [email, setEmail] = useState<string>('');\r\n    //          state: 패스워드 상태          //\r\n    const [password, setPassword] = useState<string>('');\r\n    //          state: 패스워드 타입 상태          //\r\n    const [passwordType, setPasswordType] = useState<'text' | 'password'>('password');\r\n    //          state: 패스워드 버튼 아이콘 상태          //\r\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState<'eye-light-off-icon' | 'eye-light-on-icon'>('eye-light-off-icon');\r\n    //          state: 에러 상태          //\r\n    const [error, setError] = useState<boolean>(false);\r\n    \r\n\r\n    //          function: sign in response 처리 함수           //\r\n    const signInResponse = (responseBody: SignInResponseDto | ResponseDto | null) => {\r\n      if (!responseBody) {\r\n        alert('네트워크 이상입니다.');\r\n        return;\r\n      }\r\n      const { code } = responseBody;\r\n      if (code === 'DBE') alert('데이터베이스 오류입니다.');\r\n      if (code === 'SF' || code === 'VF') setError(true);\r\n      if (code !== 'SU') return;\r\n\r\n      const { token, expirationTime } = responseBody as SignInResponseDto;\r\n      const now = new Date().getTime();\r\n      const expires = new Date(now + expirationTime * 1000);\r\n\r\n      setCookie('accessToken', token, { expires, path: MAIN_PATH() });\r\n      navigator(MAIN_PATH());\r\n\r\n    }\r\n\r\n    //          event handler: 이메일 변경 이벤트 처리 함수          //\r\n    const onEmailChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      setError(false);\r\n      const { value } = event.target;\r\n      setEmail(value);\r\n    }\r\n    //          event handler: 패스워드 변경 이벤트 처리 함수          //\r\n    const onPasswordChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      setError(false);\r\n      const { value } = event.target;\r\n      setPassword(value);\r\n    }\r\n    //          event handler: 로그인 버튼 클릭 이벤트 처리 함수          //\r\n    const onSignInButtonClickHandler = () => {\r\n        const requestBody: SignInRequestDto = { email, password };\r\n        signInRequest(requestBody).then(signInResponse);\r\n    }\r\n    //          event handler: 회원가입 링크 클릭 이벤트 처리 함수          //\r\n    const onSignUpLinkClickHandler = () => {\r\n      setView('sign-up');\r\n    }\r\n    //          event handler: 패스워드 버튼 클릭 이벤트 처리 함수          //\r\n    const onPasswordButtonClickHandler = () => {\r\n      if(passwordType === 'text'){\r\n        setPasswordType('password');\r\n        setPasswordButtonIcon('eye-light-off-icon');\r\n      }\r\n      else{\r\n        setPasswordType('text');\r\n        setPasswordButtonIcon('eye-light-on-icon');\r\n      }\r\n    }\r\n    //          event handler: 이메일 인풋 키 다운 이벤트 처리 함수          //\r\n    const onEmailKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n      if (event.key !== 'Enter') return;\r\n      if (!passwordRef.current) return;\r\n      passwordRef.current.focus();\r\n    }\r\n    //          event handler: 패스워드 인풋 키 다운 이벤트 처리 함수          //\r\n    const onPasswordKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n      if (event.key !== 'Enter') return;\r\n      onSignInButtonClickHandler();\r\n    }\r\n\r\n    //          render: sign in card 컴포넌트 렌더링          //  \r\n    return (\r\n      <div className='auth-card'>\r\n        <div className='auth-card-box'>\r\n          <div className='auth-card-top'>\r\n            <div className='auth-card-title-box'>\r\n              <div className='auth-card-title'>{'로그인'}</div>\r\n            </div>\r\n            <InputBox ref={emailRef} label='이메일 주소' type='text' placeholder='이메일 주소를 입력해주세요.' error={error} value={email} onChange={onEmailChangeHandler} onKeyDown={onEmailKeyDownHandler} />\r\n            <InputBox ref={passwordRef} label='비밀번호' type={passwordType} placeholder='비밀번호를 입력해주세요.' error={error} value={password} onChange={onPasswordChangeHandler} icon={passwordButtonIcon} onButtonClick={onPasswordButtonClickHandler} onKeyDown={onPasswordKeyDownHandler} />\r\n          </div>\r\n          <div className='auth-card-bottom'>\r\n            {error && \r\n            <div className='auth-sign-in-error-box'>\r\n              <div className='auth-sign-in-error-message'>\r\n                {'이메일 주소 또는 비밀번호를 잘못 입력했습니다.\\n입력하신 내용을 다시 확인해주세요.'}\r\n              </div>  \r\n            </div>  \r\n            }\r\n            <div className='black-large-full-button' onClick={onSignInButtonClickHandler}>{'로그인'}</div>\r\n            <div className='auth-description-box'>\r\n              <div className='auth-description'>{'신규 사용자 이신가요? '}\r\n                <span className='auth-description-link' onClick={onSignUpLinkClickHandler}>{'회원가입'}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  //          component: sign up card 컴포넌트          //\r\n  const SignUpCard = () => {\r\n\r\n    //          state: 이메일 요소 참조 상태          //\r\n    const emailRef = useRef<HTMLInputElement | null>(null);\r\n    //          state: 패스워드 요소 참조 상태          //\r\n    const passwordRef = useRef<HTMLInputElement | null>(null);\r\n    //          state: 패스워드 확인 요소 참조 상태          //\r\n    const passwordCheckRef = useRef<HTMLInputElement | null>(null);\r\n    //          state: 닉네임 요소 참조 상태          //\r\n    const nicknameRef = useRef<HTMLInputElement | null>(null);\r\n    //          state: 전화번호 요소 참조 상태          //\r\n    const telNumberRef = useRef<HTMLInputElement | null>(null);\r\n    //          state: 주소 요소 참조 상태          //\r\n    const addressRef = useRef<HTMLInputElement | null>(null);\r\n    //          state: 상세 주소 요소 참조 상태          //\r\n    const addressDetailRef = useRef<HTMLInputElement | null>(null);\r\n\r\n    //          state: 페이지 번호 상태           //\r\n    const [page, setPage] = useState<1 | 2>(2);\r\n\r\n    //          state: 이메일 상태           //\r\n    const [email, setEmail] = useState<string>('');\r\n    //          state: 패스워드 상태           //\r\n    const [password, setPassword] = useState<string>('');\r\n    //          state: 패스워드 확인 상태           //\r\n    const [passwordCheck, setPasswordCheck] = useState<string>('');\r\n    //          state: 닉네임 상태           //\r\n    const [nickname, setNickname] = useState<string>('');\r\n    //          state: 휴대전화번호 상태           //\r\n    const [telNumber, setTelNumber] = useState<string>('');\r\n    //          state: 주소 상태           //\r\n    const [address, setAddress] = useState<string>('');\r\n    //          state: 상세 주소 상태           //\r\n    const [addressDetail, setAddressDetail] = useState<string>('');\r\n    //          state: 개인 정보 동의 상태           //\r\n    const [agreedPersonal, setAgreedPersonal] = useState<boolean>(false);\r\n\r\n    //          state: 패스워드 타입 상태           //\r\n    const [passwordType, setPasswordType] = useState<'text' | 'password'>('password');\r\n    //          state: 패스워드 확인 타입 상태           //\r\n    const [passwordCheckType, setPasswordCheckType] = useState<'text' | 'password'>('password');\r\n\r\n    //          state: 이메일 에러 상태           //\r\n    const [isEmailError, setEmailError] = useState<boolean>(false);\r\n    //          state: 패스워드 에러 상태           //\r\n    const [isPasswordError, setPasswordError] = useState<boolean>(false);\r\n    //          state: 패스워드 확인 에러 상태           //\r\n    const [isPasswordCheckError, setPasswordCheckError] = useState<boolean>(false);\r\n    //          state: 닉네임 에러 상태           //\r\n    const [isNicknameError, setNicknameError] = useState<boolean>(false);\r\n    //          state: 휴대전화번호 에러 상태           //\r\n    const [isTelNumberError, setTelNumberError] = useState<boolean>(false);\r\n    //          state: 주소 에러 상태           //\r\n    const [isAddressError, setAddressError] = useState<boolean>(false);\r\n    //          state: 개인 정보 동의 에러 상태           //\r\n    const [isAgreedPersonalError, setAgreedPersonalError] = useState<boolean>(false);\r\n\r\n    //          state: 이메일 에러 메시지 상태           //\r\n    const [emailErrorMessage, setEmailErrorMessage] = useState<string>('');\r\n    //          state: 패스워드 에러 메시지 상태           //\r\n    const [passwordErrorMessage, setPasswordErrorMessage] = useState<string>('');\r\n    //          state: 패스워드 확인 에러 메시지 상태           //\r\n    const [passwordCheckErrorMessage, setPasswordCheckErrorMessage] = useState<string>('');\r\n    //          state: 닉네임 에러 메시지 상태           //\r\n    const [nicknameErrorMessage, setNicknameErrorMessage] = useState<string>('');\r\n    //          state: 휴대전호번호 에러 메시지 상태           //\r\n    const [telNumberErrorMessage, setTelNumberErrorMessage] = useState<string>('');\r\n    //          state: 주소 에러 메시지 상태           //\r\n    const [addressErrorMessage, setAddressErrorMessage] = useState<string>('');\r\n\r\n    //          state: 패스워드 버튼 아이콘 상태          //\r\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState<'eye-light-off-icon' | 'eye-light-on-icon'>('eye-light-off-icon');\r\n    //          state: 패스워드 확인 버튼 아이콘 상태          //\r\n    const [passwordCheckButtonIcon, setPasswordCheckButtonIcon] = useState<'eye-light-off-icon' | 'eye-light-on-icon'>('eye-light-off-icon');\r\n\r\n    //          function: 다음 주소 검색 팝업 오픈 함수          //\r\n    const open = useDaumPostcodePopup();\r\n\r\n    //          event handler: 이메일 변경 이벤트 처리 함수          //\r\n    const onEmailChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = event.target;\r\n      setEmail(value);\r\n      setEmailError(false);\r\n      setEmailErrorMessage('');\r\n    }\r\n    //          event handler: 패스워드 변경 이벤트 처리 함수          //\r\n    const onPasswordChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = event.target;\r\n      setPassword(value);\r\n      setPasswordError(false);\r\n      setPasswordErrorMessage('');\r\n    }\r\n    //          event handler: 패스워드 확인 변경 이벤트 처리 함수          //\r\n    const onPasswordCheckChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = event.target;\r\n      setPasswordCheck(value);\r\n      setPasswordCheckError(false);\r\n      setPasswordCheckErrorMessage('');\r\n    }\r\n    //          event handler: 닉네임 변경 이벤트 처리 함수          //\r\n    const onNicknamehangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = event.target;\r\n      setNickname(value);\r\n      setNicknameError(false);\r\n      setNicknameErrorMessage('');\r\n    }\r\n    //          event handler: 휴대전화번호 변경 이벤트 처리 함수          //\r\n    const onTelNumberChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = event.target;\r\n      setTelNumber(value);\r\n      setTelNumberError(false);\r\n      setTelNumberErrorMessage('');\r\n    }\r\n    //          event handler: 주소 변경 이벤트 처리 함수          //\r\n    const onAddressChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = event.target;\r\n      setAddress(value);\r\n      setAddressError(false);\r\n      setAddressErrorMessage('');\r\n    }\r\n    //          event handler: 상세 주소 변경 이벤트 처리 함수          //\r\n    const onAddressDetailChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = event.target;\r\n      setAddressDetail(value);\r\n    }\r\n\r\n    //          event handler: 개인 정보 동의 체크 박스 클릭 이벤트 처리 함수          //\r\n    const onAgreedPersonalClickHandler = () => {\r\n      setAgreedPersonal(!agreedPersonal);\r\n      setAgreedPersonalError(false);\r\n    }\r\n    //          event handler: 패스워드 버튼 클릭 이벤트 처리 함수          //\r\n    const onPasswordButtonClickHandler = () => {\r\n      if (passwordButtonIcon === 'eye-light-off-icon') {\r\n        setPasswordButtonIcon('eye-light-on-icon');\r\n        setPasswordType('text');\r\n      }\r\n      else {\r\n        setPasswordButtonIcon('eye-light-off-icon');\r\n        setPasswordType('password');\r\n      }\r\n    }\r\n    //          event handler: 패스워드 확인 버튼 클릭 이벤트 처리 함수          //\r\n    const onPasswordCheckButtonClickHandler = () => {\r\n      if (passwordCheckButtonIcon === 'eye-light-off-icon') {\r\n        setPasswordCheckButtonIcon('eye-light-on-icon');\r\n        setPasswordCheckType('text');\r\n      }\r\n      else {\r\n        setPasswordCheckButtonIcon('eye-light-off-icon');\r\n        setPasswordCheckType('password');\r\n      }\r\n    }\r\n    //          event handler: 주소 버튼 클릭 이벤트 처리 함수          //\r\n    const onAddressButtonClickHandler = () => {\r\n      open({ onComplete });\r\n    }\r\n    //          event handler: 다음단계 버튼 클릭 이벤트 처리 함수          //\r\n    const onNextButtonClickHandler = () => {\r\n      const isEmailBlank = email.trim().length !== 0;\r\n      if (!isEmailBlank) {\r\n        setEmailError(true);\r\n        setEmailErrorMessage('이메일을 입력해주세요.');\r\n      }\r\n      const emailPattern = /^[a-zA-Z0-9]*@([-.]?[a-zA-Z0-9])*\\.[a-zA-z]{2,4}$/;\r\n      const isEmailPattern = emailPattern.test(email);\r\n      if (isEmailBlank && !isEmailPattern) {\r\n        setEmailError(true);\r\n        setEmailErrorMessage('이메일 주소 포맷이 맞지 않습니다.');\r\n      }\r\n      const isPasswordBlank = password.trim().length !== 0;\r\n      if (!isPasswordBlank) {\r\n        setPasswordError(true);\r\n        setPasswordErrorMessage('비밀번호를 입력해주세요.');\r\n      }\r\n      const isCheckedPassword = password.trim().length > 8;\r\n      if (isPasswordBlank && !isCheckedPassword) {\r\n        setPasswordError(true);\r\n        setPasswordErrorMessage('비밀번호는 8자 이상 입력해주세요.');\r\n      }\r\n      const isPasswordCheckBlank = password.trim().length !== 0;\r\n      if (!isPasswordCheckBlank) {\r\n        setPasswordCheckError(false);\r\n        setPasswordCheckErrorMessage('');\r\n      }\r\n      const isEqualPassword = password === passwordCheck;\r\n      if (isPasswordCheckBlank && !isEqualPassword) {\r\n        setPasswordCheckError(true);  \r\n        setPasswordCheckErrorMessage('비밀번호가 일치하지 않습니다.');\r\n      }\r\n      if (!isEmailPattern || !isCheckedPassword || !isEqualPassword) return;\r\n      setPage(2);\r\n    }\r\n    //          event handler: 회원가입 버튼 클릭 이벤트 처리 함수          //\r\n    const onSignUpButtonClickHandler = () => {\r\n      const isEmailBlank = email.trim().length !== 0;\r\n      if (!isEmailBlank) {\r\n        setEmailError(true);\r\n        setEmailErrorMessage('이메일을 입력해주세요.');\r\n      }\r\n      const emailPattern = /^[a-zA-Z0-9]*@([-.]?[a-zA-Z0-9])*\\.[a-zA-z]{2,4}$/;\r\n      const isEmailPattern = emailPattern.test(email);\r\n      if (isEmailBlank && !isEmailPattern) {\r\n        setEmailError(true);\r\n        setEmailErrorMessage('이메일 주소 포맷이 맞지 않습니다.');\r\n      }\r\n      const isPasswordBlank = password.trim().length !== 0;\r\n      if (!isPasswordBlank) {\r\n        setPasswordError(true);\r\n        setPasswordErrorMessage('비밀번호를 입력해주세요.');\r\n      }\r\n      const isCheckedPassword = password.trim().length > 8;\r\n      if (isPasswordBlank && !isCheckedPassword) {\r\n        setPasswordError(true);\r\n        setPasswordErrorMessage('비밀번호는 8자 이상 입력해주세요.');\r\n      }\r\n      const isPasswordCheckBlank = password.trim().length !== 0;\r\n      if (!isPasswordCheckBlank) {\r\n        setPasswordCheckError(false);\r\n        setPasswordCheckErrorMessage('');\r\n      }\r\n      const isEqualPassword = password === passwordCheck;\r\n      if (isPasswordCheckBlank && !isEqualPassword) {\r\n        setPasswordCheckError(true);  \r\n        setPasswordCheckErrorMessage('비밀번호가 일치하지 않습니다.');\r\n      }\r\n      if (!isEmailPattern || !isCheckedPassword || !isEqualPassword) {\r\n        setPage(1);\r\n        return;\r\n      }\r\n      const isNicknameBlank = nickname.length !== 0;\r\n      if (!isNicknameBlank) {\r\n        setNicknameError(true);\r\n        setNicknameErrorMessage('닉네임을 입력해주세요.');\r\n      }\r\n      const telNumberPattern = /^[0-9]{11,13}$/;\r\n      if (!telNumberPattern) {\r\n        setNicknameError(true);\r\n        setNicknameErrorMessage('숫자만 입력해주세요.');\r\n      }\r\n    }\r\n    //          event handler: 로그인 링크 클릭 이벤트 처리 함수          //\r\n    const onSignInLinkClickHandler = () => {\r\n      setView('sign-in');\r\n    }\r\n    //          event handler: 이메일 키 다운 이벤트 처리 함수          //\r\n    const onEmailKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n      if (event.key !== 'Enter') return;\r\n      if (!passwordRef.current) return\r\n      passwordRef.current.focus(); \r\n    }\r\n    //          event handler: 패스워드 키 다운 이벤트 처리 함수          //\r\n    const onPasswordKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n      if (event.key !== 'Enter') return;\r\n      if (!passwordCheckRef.current) return\r\n      passwordCheckRef.current.focus(); \r\n    }\r\n    //          event handler: 패스워드 확인 키 다운 이벤트 처리 함수          //\r\n    const onPasswordCheckKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n      if (event.key !== 'Enter') return;\r\n      if (!nicknameRef.current) return;\r\n      onNextButtonClickHandler();\r\n      nicknameRef.current.focus(); \r\n\r\n    }\r\n    //          event handler: 닉네임 키 다운 이벤트 처리 함수          //\r\n    const onNicknameKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n      if (event.key !== 'Enter') return;\r\n      if (!telNumberRef.current) return;\r\n      telNumberRef.current.focus(); \r\n    }\r\n    //          event handler: 휴대전화번호 키 다운 이벤트 처리 함수          //\r\n    const onTelNumberKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n      if (event.key !== 'Enter') return;\r\n      onAddressButtonClickHandler();\r\n    }\r\n    //          event handler: 주소 키 다운 이벤트 처리 함수          //\r\n    const onAddressKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n      if (event.key !== 'Enter') return;\r\n      if (!addressDetailRef.current) return;\r\n      addressDetailRef.current.focus(); \r\n    }\r\n    //          event handler: 상세 주소 키 다운 이벤트 처리 함수          //\r\n    const onAddressDetailKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n      if (event.key !== 'Enter') return;\r\n      onSignUpButtonClickHandler();\r\n    }\r\n\r\n    //          event handler: 다음 주소 검색 완료 이벤트 처리 함수          //\r\n    const onComplete = (data: Address) => {\r\n      const { address } = data;\r\n      setAddress(address);\r\n      if (!addressDetailRef.current) return;\r\n      addressDetailRef.current.focus();\r\n    }\r\n\r\n    //          render: sign up card 컴포넌트 렌더링          //  \r\n    return (\r\n      <div className='auth-card'>\r\n        <div className='auth-card-box'>\r\n          <div className='auth-card-top'>\r\n            <div className='auth-card-title-box'>\r\n              <div className='auth-card-title'>{'회원가입'}</div>\r\n              <div className='auth-card-page'>{`${page}/2`}</div>\r\n            </div>\r\n              {page === 1 && (\r\n              <>\r\n              <InputBox ref={emailRef} label='이메일 주소*' type='text' placeholder='이메일 주소를 입력해주세요.' value={email} onChange={onEmailChangeHandler} error={isEmailError} message={emailErrorMessage} onKeyDown={onEmailKeyDownHandler}/>\r\n              <InputBox ref={passwordRef} label='비밀번호*'  type={passwordType} placeholder='패스워드를 입력해주세요.' value={password} onChange={onPasswordChangeHandler} error={isPasswordError} message={passwordErrorMessage} icon={passwordButtonIcon} onButtonClick={onPasswordButtonClickHandler} onKeyDown={onPasswordKeyDownHandler}/>\r\n              <InputBox ref={passwordCheckRef} label='비밀번호 확인*' type={passwordCheckType} placeholder='비밀번호를 다시 입력해주세요.' value={passwordCheck} onChange={onPasswordCheckChangeHandler} error={isPasswordCheckError} message={passwordCheckErrorMessage} icon={passwordCheckButtonIcon} onButtonClick={onPasswordCheckButtonClickHandler} onKeyDown={onPasswordCheckKeyDownHandler}/>\r\n              </>\r\n              )}\r\n              {page === 2 && (\r\n              <>\r\n              <InputBox ref={nicknameRef} label='닉네임*' type='text' placeholder='닉네임을 입력해주세요.' value={nickname} onChange={onNicknamehangeHandler} error={isNicknameError} message={nicknameErrorMessage} onKeyDown={onNicknameKeyDownHandler}/>\r\n              <InputBox ref={telNumberRef} label='휴대전화 번호*' type='text' placeholder='휴대전화번호를 입력해주세요.' value={telNumber} onChange={onTelNumberChangeHandler} error={isTelNumberError} message={telNumberErrorMessage} onKeyDown={onTelNumberKeyDownHandler} />\r\n              <InputBox ref={addressRef} label='주소*'  type='text' placeholder='우편번호 찾기' value={address} onChange={onAddressChangeHandler} error={isAddressError} message={addressErrorMessage} icon='expand-right-light-icon' onButtonClick={onAddressButtonClickHandler} onKeyDown={onAddressKeyDownHandler}/>\r\n              <InputBox ref={addressDetailRef} label='상세 주소' type='text' placeholder='상세 주소를 입력해주세요.' value={addressDetail} onChange={onAddressDetailChangeHandler} error={false} onKeyDown={onAddressDetailKeyDownHandler}/>\r\n              </>\r\n              )}\r\n          </div>\r\n          <div className='auth-card-bottom'>\r\n              {page === 1 && (\r\n              <div className='black-large-full-button' onClick={onNextButtonClickHandler}>{'다음 단계'}</div>\r\n              )}\r\n              {page === 2 && (\r\n              <>\r\n              <div className='auth-consent-box'>\r\n                <div className='auth-check-box' onClick={onAgreedPersonalClickHandler}>\r\n                  <div className={`icon ${agreedPersonal ? 'check-round-fill-icon' : 'check-ring-light-icon' }`}></div>\r\n                </div>\r\n                <div className={isAgreedPersonalError ? 'auth-consent-title-error' : 'auth-consent-title'}>{'개인정보동의'}</div>\r\n                <div className='auth-consent-link'>{'더보기 >'}</div>\r\n              </div>\r\n              <div className='black-large-full-button' onClick={onSignUpButtonClickHandler}>{'회원가입'}</div>\r\n              </>\r\n              )}\r\n            <div className='auth-description-box'>\r\n              <div className='auth-description'>{'이미 계정이 있으신가요? '}<span className='auth-description-link' onClick={onSignInLinkClickHandler}>{'로그인'}</span></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  //          render: 인증 화면 컴포넌트 렌더링          //  \r\n  return (\r\n    <div id='auth-wrapper'>\r\n      <div className='auth-container'>\r\n        <div className='auth-jumbotron-box'>\r\n          <div className='auth-jumbotron-contents'>\r\n            <div className='auth-logo-icon'></div>\r\n            <div className='auth-jumbotron-text-box'>\r\n              <div className='auth-jumbotron-text'>{'환영합니다'}</div>\r\n              <div className='auth-jumbotron-text'>{'Jun\\'s Board 입니다.'}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {view === 'sign-in' && <SignInCard/>}\r\n        {view === 'sign-up' && <SignUpCard/>}\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}