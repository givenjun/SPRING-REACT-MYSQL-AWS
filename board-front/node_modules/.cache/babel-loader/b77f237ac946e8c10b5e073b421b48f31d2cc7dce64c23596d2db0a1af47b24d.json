{"ast":null,"code":"import{useEffect,useRef,useState}from'react';import'./style.css';import{useLocation,useNavigate,useParams}from'react-router-dom';import{AUTH_PATH,BOARD_DETAIL_PATH,BOARD_PATH,BOARD_UPDATE_PATH,BOARD_WRITE_PATH,MAIN_PATH,SEARCH_PATH,USER_PATH}from'constant';import{useCookies}from'react-cookie';import{useLoginUserStore}from'stores';import useBoardStore from'stores/board.store';import{fileUploadRequest,patchBoardRequest,postBoardRequest}from'apis';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";//          component: 헤더 레이아웃          //\nexport default function Header(){//          state: 로그인 유저 상태          //\nconst{loginUser,setLoginUser,resetLoginUser}=useLoginUserStore();//          state: path 상태          //\nconst{pathname}=useLocation();//          state: cookie 상태          //\nconst[cookies,setCookie]=useCookies();//          state: 로그인 상태          //\nconst[isLogin,setLogin]=useState(false);//          state: 인증 페이지 상태          //\nconst[isAuthPage,setAuthPage]=useState(false);//          state: 메인 페이지 상태          //\nconst[isMainPage,setMainPage]=useState(false);//          state: 검색 페이지 상태          //\nconst[isSearchPage,setSearchPage]=useState(false);//          state: 게시물 상세 페이지 상태          //\nconst[isBoardDetailPage,setBoardDetailPage]=useState(false);//          state: 게시물 작성 페이지 상태          //\nconst[isBoardWritePage,setBoardWritePage]=useState(false);//          state: 게시물 수정 페이지 상태          //\nconst[isBoardUpdatePage,setBoardUpdatePage]=useState(false);//          state: 유저 페이지 상태          //\nconst[isUserPage,setUserPage]=useState(false);//          function: 네비게이트 함수          //\nconst navigate=useNavigate();//          event handler: 로고 클릭 이벤트 처리 함수          //\nconst onLogoClickHandler=()=>{navigate(MAIN_PATH());};//          component: 검색 버튼 컴포넌트         //\nconst SearchButton=()=>{//          state: 검색어 버튼 요소 참조 상태          //\nconst searchButtonRef=useRef(null);//          state: 검색 버튼 상태          //\nconst[status,setStatus]=useState(false);//          state: 검색어 상태          //\nconst[Word,setWord]=useState('');//          state: 검색어 path variable 상태          //\nconst{searchWord}=useParams();//         event handler: 검색어 변경 이벤트 처리 함수           //\nconst onSearchWordChangeHandler=event=>{const value=event.target.value;setWord(value);};//         event handler: 검색어 키 이벤트 처리 함수           //\nconst onSearchWordKeyDownHandler=event=>{if(event.key!=='Enter')return;if(!searchButtonRef.current)return;searchButtonRef.current.click();};//         event handler: 검색 버튼 클릭 이벤트 처리 함수           //\nconst onSearchButtonClickHandler=()=>{if(!status){setStatus(!status);return;}navigate(SEARCH_PATH(Word));};//         effect: 검색어 path variable 변경 시 실행 함수           //\nuseEffect(()=>{if(searchWord){setWord(searchWord);setStatus(true);}},[searchWord]);if(!status)//          render: 검색 버튼 컴포넌트 렌더링 (클릭 Flase 상태)          //\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"icon-button\",onClick:onSearchButtonClickHandler,children:/*#__PURE__*/_jsx(\"div\",{className:\"icon search-light-icon\"})});//          render: 검색 버튼 컴포넌트 렌더링 (클릭 True 상태)          //\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"header-search-input-box\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"header-search-input\",type:\"text\",placeholder:\"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",value:Word,onChange:onSearchWordChangeHandler,onKeyDown:onSearchWordKeyDownHandler}),/*#__PURE__*/_jsx(\"div\",{ref:searchButtonRef,className:\"icon-button\",onClick:onSearchButtonClickHandler,children:/*#__PURE__*/_jsx(\"div\",{className:\"icon search-light-icon\"})})]});};//          component: 마이페이지 버튼 컴포넌트         //\nconst MyPageButton=()=>{//          state: userEmail path variable 상태          //\nconst{userEmail}=useParams();//          event handler: 마이페이지 버튼 클릭 이벤트 처리 함수         //\nconst onMyPageButtonClickHandler=()=>{if(!loginUser)return;const{email}=loginUser;navigate(USER_PATH(email));};//          event handler: 로그인 버튼 클릭 이벤트 처리 함수         //\nconst onSignInButtonClickHandler=()=>{navigate(AUTH_PATH());};//          event handler: 로그아웃 버튼 클릭 이벤트 처리 함수         //\nconst onSignOutButtonClickHandler=()=>{resetLoginUser();setCookie('accessToken','',{path:MAIN_PATH(),expires:new Date()});navigate(MAIN_PATH());};//          render: 로그아웃 버튼 컴포넌트 렌더링          //\nif(isLogin&&userEmail===(loginUser===null||loginUser===void 0?void 0:loginUser.email))return/*#__PURE__*/_jsx(\"div\",{className:\"white-button\",onClick:onSignOutButtonClickHandler,children:'로그아웃'});//          render: 마이페이지 버튼 컴포넌트 렌더링          //\nif(isLogin)return/*#__PURE__*/_jsx(\"div\",{className:\"white-button\",onClick:onMyPageButtonClickHandler,children:'마이페이지'});//          render: 로그인 버튼 컴포넌트 렌더링          //\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"black-button\",onClick:onSignInButtonClickHandler,children:'로그인'});};//          component: 업로드 버튼 컴포넌트         //\nconst UploadButton=()=>{//          state: 게시물 번호 path variable 상태          //\nconst{boardNumber}=useParams();//          state: 게시물 상태          //\nconst{title,content,boardImageFileList,resetBoard}=useBoardStore();//          function: post board reponse 처리 함수           //\nconst postBoardResponse=responseBody=>{if(!responseBody)return;const{code}=responseBody;if(code==='DBE')alert('데이터베이스 오류입니다.');if(code==='AF'||code==='NU')navigate(AUTH_PATH());if(code==='VF')alert('제목과 내용은 필수입니다.');if(code!=='SU')return;resetBoard();if(!loginUser)return;const{email}=loginUser;navigate(USER_PATH(email));};//          function: patch board reponse 처리 함수           //\nconst patchBoardResponse=responseBody=>{if(!responseBody)return;const{code}=responseBody;if(code==='DBE')alert('데이터베이스 오류입니다.');if(code==='AF'||code==='NU'||code==='NB'||code==='NP')navigate(AUTH_PATH());if(code==='VF')alert('제목과 내용은 필수입니다.');if(code!=='SU')return;if(!boardNumber)return;navigate(BOARD_PATH()+'/'+BOARD_DETAIL_PATH(boardNumber));};//          event handler: 업로드 버튼 클릭 이벤트 처리 함수          //\nconst onUploadButtonClickHandler=async()=>{const accessToken=cookies.accessToken;if(!accessToken)return;const boardImageList=[];for(const file of boardImageFileList){const data=new FormData();data.append('file',file);const url=await fileUploadRequest(data);if(url)boardImageList.push(url);}const isWriterPage=pathname===BOARD_PATH()+'/'+BOARD_WRITE_PATH();if(isWriterPage){const requestBody={title,content,boardImageList};postBoardRequest(requestBody,accessToken).then(postBoardResponse);}else{if(!boardNumber)return;const requestBody={title,content,boardImageList};patchBoardRequest(boardNumber,requestBody,accessToken).then(patchBoardResponse);}};//          render: 업로드 버튼 컴포넌트 렌더링          //\nif(title&&content)return/*#__PURE__*/_jsx(\"div\",{className:\"black-button\",onClick:onUploadButtonClickHandler,children:'업로드'});//          render: 업로드 불가 버튼 컴포넌트 렌더링          //\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"disable-button\",children:'업로드'});};//          effect: path가 변경될 때 마다 실행될 함수           //\nuseEffect(()=>{const isAuthPage=pathname.startsWith(AUTH_PATH());setAuthPage(isAuthPage);const isMainPage=pathname===MAIN_PATH();setMainPage(isMainPage);const isSearchPage=pathname.startsWith(SEARCH_PATH(''));setSearchPage(isSearchPage);const isBoardDetailPage=pathname.startsWith(BOARD_PATH()+'/'+BOARD_DETAIL_PATH(''));setBoardDetailPage(isBoardDetailPage);const isBoardWritePage=pathname.startsWith(BOARD_PATH()+'/'+BOARD_WRITE_PATH());setBoardWritePage(isBoardWritePage);const isBoardUpdatePage=pathname.startsWith(BOARD_PATH()+'/'+BOARD_UPDATE_PATH(''));setBoardUpdatePage(isBoardUpdatePage);const isUserPage=pathname.startsWith(USER_PATH(''));setUserPage(isUserPage);},[pathname]);//          effect: login user가 변경될 때 마다 실행될 함수           //\nuseEffect(()=>{setLogin(loginUser!==null);},[loginUser]);//          render: 헤더 레이아웃 렌더링          //\nreturn/*#__PURE__*/_jsx(\"div\",{id:\"header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"header-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header-left-box\",onClick:onLogoClickHandler,children:[/*#__PURE__*/_jsx(\"div\",{className:\"icon-box\",children:/*#__PURE__*/_jsx(\"div\",{className:\"icon logo-dark-icon\",children:\" \"})}),/*#__PURE__*/_jsx(\"div\",{className:\"header-logo\",children:'Jun\\'s Board'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"header-right-box\",children:[(isAuthPage||isMainPage||isSearchPage||isBoardDetailPage)&&/*#__PURE__*/_jsx(SearchButton,{}),(isMainPage||isSearchPage||isBoardDetailPage||isUserPage)&&/*#__PURE__*/_jsx(MyPageButton,{}),(isBoardWritePage||isBoardUpdatePage)&&/*#__PURE__*/_jsx(UploadButton,{})]})]})});}","map":{"version":3,"names":["useEffect","useRef","useState","useLocation","useNavigate","useParams","AUTH_PATH","BOARD_DETAIL_PATH","BOARD_PATH","BOARD_UPDATE_PATH","BOARD_WRITE_PATH","MAIN_PATH","SEARCH_PATH","USER_PATH","useCookies","useLoginUserStore","useBoardStore","fileUploadRequest","patchBoardRequest","postBoardRequest","jsx","_jsx","jsxs","_jsxs","Header","loginUser","setLoginUser","resetLoginUser","pathname","cookies","setCookie","isLogin","setLogin","isAuthPage","setAuthPage","isMainPage","setMainPage","isSearchPage","setSearchPage","isBoardDetailPage","setBoardDetailPage","isBoardWritePage","setBoardWritePage","isBoardUpdatePage","setBoardUpdatePage","isUserPage","setUserPage","navigate","onLogoClickHandler","SearchButton","searchButtonRef","status","setStatus","Word","setWord","searchWord","onSearchWordChangeHandler","event","value","target","onSearchWordKeyDownHandler","key","current","click","onSearchButtonClickHandler","className","onClick","children","type","placeholder","onChange","onKeyDown","ref","MyPageButton","userEmail","onMyPageButtonClickHandler","email","onSignInButtonClickHandler","onSignOutButtonClickHandler","path","expires","Date","UploadButton","boardNumber","title","content","boardImageFileList","resetBoard","postBoardResponse","responseBody","code","alert","patchBoardResponse","onUploadButtonClickHandler","accessToken","boardImageList","file","data","FormData","append","url","push","isWriterPage","requestBody","then","startsWith","id"],"sources":["C:/Users/정준/Documents/spring-react-mysql/board-front/src/layouts/Header/index.tsx"],"sourcesContent":["import { ChangeEvent, KeyboardEvent, useEffect, useRef, useState } from 'react'\r\nimport './style.css'\r\nimport { useLocation, useNavigate, useParams } from 'react-router-dom'\r\nimport { AUTH_PATH, BOARD_DETAIL_PATH, BOARD_PATH, BOARD_UPDATE_PATH, BOARD_WRITE_PATH, MAIN_PATH, SEARCH_PATH, USER_PATH } from 'constant';\r\nimport { useCookies } from 'react-cookie';\r\nimport { useLoginUserStore } from 'stores';\r\nimport useBoardStore from 'stores/board.store';\r\nimport { fileUploadRequest, patchBoardRequest, postBoardRequest } from 'apis';\r\nimport { PatchBoardRequestDto, PostBoardRequestDto } from 'apis/request/board';\r\nimport { PatchBoardResponseDto, PostBoardResponseDto } from 'apis/response/board';\r\nimport { ResponseDto } from 'apis/response';\r\n\r\n//          component: 헤더 레이아웃          //\r\nexport default function Header() {\r\n \r\n  //          state: 로그인 유저 상태          //\r\n  const { loginUser, setLoginUser, resetLoginUser } = useLoginUserStore();\r\n  //          state: path 상태          //\r\n  const { pathname } = useLocation();\r\n  //          state: cookie 상태          //\r\n  const [ cookies, setCookie ] = useCookies();\r\n  //          state: 로그인 상태          //\r\n  const [ isLogin, setLogin ] = useState<boolean>(false);\r\n  //          state: 인증 페이지 상태          //\r\n  const [ isAuthPage, setAuthPage ] = useState<boolean>(false);\r\n  //          state: 메인 페이지 상태          //\r\n  const [ isMainPage, setMainPage ] = useState<boolean>(false);\r\n  //          state: 검색 페이지 상태          //\r\n  const [ isSearchPage, setSearchPage ] = useState<boolean>(false);\r\n  //          state: 게시물 상세 페이지 상태          //\r\n  const [ isBoardDetailPage, setBoardDetailPage ] = useState<boolean>(false);\r\n  //          state: 게시물 작성 페이지 상태          //\r\n  const [ isBoardWritePage, setBoardWritePage ] = useState<boolean>(false);\r\n  //          state: 게시물 수정 페이지 상태          //\r\n  const [ isBoardUpdatePage, setBoardUpdatePage ] = useState<boolean>(false);\r\n  //          state: 유저 페이지 상태          //\r\n  const [ isUserPage, setUserPage ] = useState<boolean>(false);\r\n\r\n  //          function: 네비게이트 함수          //\r\n  const navigate = useNavigate();\r\n\r\n  //          event handler: 로고 클릭 이벤트 처리 함수          //\r\n  const onLogoClickHandler = () => {\r\n    navigate(MAIN_PATH());\r\n  }\r\n\r\n  //          component: 검색 버튼 컴포넌트         //\r\n  const SearchButton = () => {\r\n\r\n    //          state: 검색어 버튼 요소 참조 상태          //\r\n    const searchButtonRef = useRef<HTMLDivElement | null> (null);\r\n    //          state: 검색 버튼 상태          //\r\n    const [status, setStatus] = useState<boolean>(false);\r\n    //          state: 검색어 상태          //\r\n    const [Word, setWord] = useState<string>('');\r\n    //          state: 검색어 path variable 상태          //\r\n    const { searchWord } = useParams();\r\n\r\n    //         event handler: 검색어 변경 이벤트 처리 함수           //\r\n    const onSearchWordChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      const value = event.target.value;\r\n      setWord(value);\r\n    };\r\n    //         event handler: 검색어 키 이벤트 처리 함수           //\r\n    const onSearchWordKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n      if (event.key !== 'Enter') return;\r\n      if (!searchButtonRef.current) return;\r\n      searchButtonRef.current.click();\r\n    };\r\n    //         event handler: 검색 버튼 클릭 이벤트 처리 함수           //\r\n    const onSearchButtonClickHandler = () => {\r\n      if(!status){\r\n        setStatus(!status);\r\n        return;\r\n      }\r\n      navigate(SEARCH_PATH(Word));\r\n    };\r\n\r\n    //         effect: 검색어 path variable 변경 시 실행 함수           //\r\n    useEffect(() => { \r\n      if (searchWord) {\r\n        setWord(searchWord);\r\n        setStatus(true);\r\n      }\r\n    }, [searchWord]);\r\n\r\n    if (!status)\r\n    //          render: 검색 버튼 컴포넌트 렌더링 (클릭 Flase 상태)          //\r\n    return (\r\n    <div className='icon-button' onClick={onSearchButtonClickHandler}>\r\n      <div className='icon search-light-icon'></div>\r\n    </div>\r\n    );\r\n    //          render: 검색 버튼 컴포넌트 렌더링 (클릭 True 상태)          //\r\n    return (\r\n    <div className='header-search-input-box'>\r\n      <input className='header-search-input' type='text' placeholder='검색어를 입력해주세요.' value={Word} onChange={onSearchWordChangeHandler} onKeyDown={onSearchWordKeyDownHandler}/>\r\n      <div ref={searchButtonRef} className='icon-button' onClick={onSearchButtonClickHandler}>\r\n        <div className='icon search-light-icon'></div>\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n\r\n  //          component: 마이페이지 버튼 컴포넌트         //\r\n  const MyPageButton = () => {\r\n\r\n    //          state: userEmail path variable 상태          //\r\n    const { userEmail } = useParams();\r\n    \r\n    //          event handler: 마이페이지 버튼 클릭 이벤트 처리 함수         //\r\n    const onMyPageButtonClickHandler = () => {\r\n      if (!loginUser) return;\r\n      const { email } = loginUser;\r\n      navigate(USER_PATH(email));\r\n    };\r\n    //          event handler: 로그인 버튼 클릭 이벤트 처리 함수         //\r\n    const onSignInButtonClickHandler = () => {\r\n      navigate(AUTH_PATH());\r\n    };\r\n    //          event handler: 로그아웃 버튼 클릭 이벤트 처리 함수         //\r\n    const onSignOutButtonClickHandler = () => {\r\n      resetLoginUser();\r\n      setCookie('accessToken', '', { path: MAIN_PATH(), expires: new Date() });\r\n      navigate(MAIN_PATH());\r\n    };\r\n\r\n\r\n    //          render: 로그아웃 버튼 컴포넌트 렌더링          //\r\n    if (isLogin && userEmail === loginUser?.email)\r\n    return <div className='white-button' onClick={onSignOutButtonClickHandler}>{'로그아웃'}</div>;\r\n    //          render: 마이페이지 버튼 컴포넌트 렌더링          //\r\n    if (isLogin)\r\n    return <div className='white-button' onClick={onMyPageButtonClickHandler}>{'마이페이지'}</div>;  \r\n    //          render: 로그인 버튼 컴포넌트 렌더링          //\r\n    return <div className='black-button' onClick={onSignInButtonClickHandler}>{'로그인'}</div>;\r\n  };\r\n\r\n  //          component: 업로드 버튼 컴포넌트         //\r\n  const UploadButton = () => {\r\n\r\n    //          state: 게시물 번호 path variable 상태          //\r\n    const { boardNumber } = useParams();\r\n    //          state: 게시물 상태          //\r\n    const { title, content, boardImageFileList, resetBoard } = useBoardStore();\r\n    \r\n    //          function: post board reponse 처리 함수           //\r\n    const postBoardResponse = (responseBody: PostBoardResponseDto | ResponseDto | null ) => {\r\n      if (!responseBody) return;\r\n      const { code } = responseBody;\r\n\r\n      if (code === 'DBE') alert('데이터베이스 오류입니다.');\r\n      if (code === 'AF' || code === 'NU' ) navigate(AUTH_PATH());\r\n      if (code === 'VF') alert('제목과 내용은 필수입니다.');\r\n      if (code !== 'SU') return;\r\n\r\n      resetBoard();\r\n      if (!loginUser) return;\r\n      const { email } = loginUser;\r\n      navigate(USER_PATH(email));\r\n    }\r\n    //          function: patch board reponse 처리 함수           //\r\n    const patchBoardResponse = (responseBody: PatchBoardResponseDto | ResponseDto | null) => {\r\n      if (!responseBody) return;\r\n      const { code } = responseBody;\r\n\r\n      if (code === 'DBE') alert('데이터베이스 오류입니다.');\r\n      if (code === 'AF' || code === 'NU' || code === 'NB' || code === 'NP') navigate(AUTH_PATH());\r\n      if (code === 'VF') alert('제목과 내용은 필수입니다.');\r\n      if (code !== 'SU') return;\r\n\r\n      if (!boardNumber) return;\r\n      navigate(BOARD_PATH() + '/' + BOARD_DETAIL_PATH(boardNumber));\r\n    }\r\n\r\n    //          event handler: 업로드 버튼 클릭 이벤트 처리 함수          //\r\n    const onUploadButtonClickHandler = async () => {\r\n      const accessToken = cookies.accessToken;\r\n      if (!accessToken) return;\r\n      \r\n      const boardImageList: string[] = [];\r\n      \r\n      for (const file of boardImageFileList) {\r\n        const data = new FormData();\r\n        data.append('file', file);\r\n\r\n        const url = await fileUploadRequest(data);\r\n        if (url) boardImageList.push(url); \r\n      }\r\n\r\n      const isWriterPage = pathname === BOARD_PATH() + '/' + BOARD_WRITE_PATH(); \r\n      if (isWriterPage) {\r\n        const requestBody: PostBoardRequestDto = {\r\n          title, content, boardImageList\r\n        };\r\n        postBoardRequest(requestBody, accessToken).then(postBoardResponse);\r\n      } else {\r\n        if (!boardNumber) return;\r\n        const requestBody: PatchBoardRequestDto = {\r\n          title, content, boardImageList\r\n        };\r\n        patchBoardRequest(boardNumber, requestBody, accessToken).then(patchBoardResponse);\r\n      }\r\n\r\n      \r\n    }\r\n\r\n    //          render: 업로드 버튼 컴포넌트 렌더링          //\r\n    if (title && content)\r\n    return <div className='black-button' onClick={onUploadButtonClickHandler}>{'업로드'}</div>;\r\n    //          render: 업로드 불가 버튼 컴포넌트 렌더링          //\r\n    return <div className='disable-button'>{'업로드'}</div>;\r\n  }\r\n\r\n  //          effect: path가 변경될 때 마다 실행될 함수           //\r\n  useEffect(() => {\r\n    const isAuthPage = pathname.startsWith(AUTH_PATH());\r\n    setAuthPage(isAuthPage);\r\n    const isMainPage = pathname === MAIN_PATH();\r\n    setMainPage(isMainPage);\r\n    const isSearchPage = pathname.startsWith(SEARCH_PATH(''));\r\n    setSearchPage(isSearchPage);\r\n    const isBoardDetailPage = pathname.startsWith(BOARD_PATH() + '/' + BOARD_DETAIL_PATH(''));\r\n    setBoardDetailPage(isBoardDetailPage);\r\n    const isBoardWritePage = pathname.startsWith(BOARD_PATH() + '/' + BOARD_WRITE_PATH());\r\n    setBoardWritePage(isBoardWritePage);\r\n    const isBoardUpdatePage = pathname.startsWith(BOARD_PATH() + '/' + BOARD_UPDATE_PATH(''));\r\n    setBoardUpdatePage(isBoardUpdatePage);\r\n    const isUserPage = pathname.startsWith(USER_PATH(''));\r\n    setUserPage(isUserPage);\r\n  }, [pathname])\r\n  //          effect: login user가 변경될 때 마다 실행될 함수           //\r\n  useEffect(() => {\r\n    setLogin(loginUser !== null);\r\n  }, [loginUser])\r\n\r\n  //          render: 헤더 레이아웃 렌더링          //\r\n  return (\r\n    <div id='header'>\r\n      <div className='header-container'> \r\n        <div className='header-left-box' onClick={onLogoClickHandler}>\r\n          <div className='icon-box'>\r\n            <div className='icon logo-dark-icon'> </div>\r\n          </div>\r\n          <div className='header-logo'>{'Jun\\'s Board'}</div>\r\n        </div>\r\n        <div className='header-right-box'>\r\n          {(isAuthPage || isMainPage || isSearchPage || isBoardDetailPage) && <SearchButton />}\r\n          {(isMainPage || isSearchPage || isBoardDetailPage || isUserPage) && <MyPageButton />}\r\n          {(isBoardWritePage || isBoardUpdatePage) && <UploadButton />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"AAAA,OAAqCA,SAAS,CAAEC,MAAM,CAAEC,QAAQ,KAAQ,OAAO,CAC/E,MAAO,aAAa,CACpB,OAASC,WAAW,CAAEC,WAAW,CAAEC,SAAS,KAAQ,kBAAkB,CACtE,OAASC,SAAS,CAAEC,iBAAiB,CAAEC,UAAU,CAAEC,iBAAiB,CAAEC,gBAAgB,CAAEC,SAAS,CAAEC,WAAW,CAAEC,SAAS,KAAQ,UAAU,CAC3I,OAASC,UAAU,KAAQ,cAAc,CACzC,OAASC,iBAAiB,KAAQ,QAAQ,CAC1C,MAAO,CAAAC,aAAa,KAAM,oBAAoB,CAC9C,OAASC,iBAAiB,CAAEC,iBAAiB,CAAEC,gBAAgB,KAAQ,MAAM,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAK9E;AACA,cAAe,SAAS,CAAAC,MAAMA,CAAA,CAAG,CAE/B;AACA,KAAM,CAAEC,SAAS,CAAEC,YAAY,CAAEC,cAAe,CAAC,CAAGZ,iBAAiB,CAAC,CAAC,CACvE;AACA,KAAM,CAAEa,QAAS,CAAC,CAAGzB,WAAW,CAAC,CAAC,CAClC;AACA,KAAM,CAAE0B,OAAO,CAAEC,SAAS,CAAE,CAAGhB,UAAU,CAAC,CAAC,CAC3C;AACA,KAAM,CAAEiB,OAAO,CAAEC,QAAQ,CAAE,CAAG9B,QAAQ,CAAU,KAAK,CAAC,CACtD;AACA,KAAM,CAAE+B,UAAU,CAAEC,WAAW,CAAE,CAAGhC,QAAQ,CAAU,KAAK,CAAC,CAC5D;AACA,KAAM,CAAEiC,UAAU,CAAEC,WAAW,CAAE,CAAGlC,QAAQ,CAAU,KAAK,CAAC,CAC5D;AACA,KAAM,CAAEmC,YAAY,CAAEC,aAAa,CAAE,CAAGpC,QAAQ,CAAU,KAAK,CAAC,CAChE;AACA,KAAM,CAAEqC,iBAAiB,CAAEC,kBAAkB,CAAE,CAAGtC,QAAQ,CAAU,KAAK,CAAC,CAC1E;AACA,KAAM,CAAEuC,gBAAgB,CAAEC,iBAAiB,CAAE,CAAGxC,QAAQ,CAAU,KAAK,CAAC,CACxE;AACA,KAAM,CAAEyC,iBAAiB,CAAEC,kBAAkB,CAAE,CAAG1C,QAAQ,CAAU,KAAK,CAAC,CAC1E;AACA,KAAM,CAAE2C,UAAU,CAAEC,WAAW,CAAE,CAAG5C,QAAQ,CAAU,KAAK,CAAC,CAE5D;AACA,KAAM,CAAA6C,QAAQ,CAAG3C,WAAW,CAAC,CAAC,CAE9B;AACA,KAAM,CAAA4C,kBAAkB,CAAGA,CAAA,GAAM,CAC/BD,QAAQ,CAACpC,SAAS,CAAC,CAAC,CAAC,CACvB,CAAC,CAED;AACA,KAAM,CAAAsC,YAAY,CAAGA,CAAA,GAAM,CAEzB;AACA,KAAM,CAAAC,eAAe,CAAGjD,MAAM,CAAyB,IAAI,CAAC,CAC5D;AACA,KAAM,CAACkD,MAAM,CAAEC,SAAS,CAAC,CAAGlD,QAAQ,CAAU,KAAK,CAAC,CACpD;AACA,KAAM,CAACmD,IAAI,CAAEC,OAAO,CAAC,CAAGpD,QAAQ,CAAS,EAAE,CAAC,CAC5C;AACA,KAAM,CAAEqD,UAAW,CAAC,CAAGlD,SAAS,CAAC,CAAC,CAElC;AACA,KAAM,CAAAmD,yBAAyB,CAAIC,KAAoC,EAAK,CAC1E,KAAM,CAAAC,KAAK,CAAGD,KAAK,CAACE,MAAM,CAACD,KAAK,CAChCJ,OAAO,CAACI,KAAK,CAAC,CAChB,CAAC,CACD;AACA,KAAM,CAAAE,0BAA0B,CAAIH,KAAsC,EAAK,CAC7E,GAAIA,KAAK,CAACI,GAAG,GAAK,OAAO,CAAE,OAC3B,GAAI,CAACX,eAAe,CAACY,OAAO,CAAE,OAC9BZ,eAAe,CAACY,OAAO,CAACC,KAAK,CAAC,CAAC,CACjC,CAAC,CACD;AACA,KAAM,CAAAC,0BAA0B,CAAGA,CAAA,GAAM,CACvC,GAAG,CAACb,MAAM,CAAC,CACTC,SAAS,CAAC,CAACD,MAAM,CAAC,CAClB,OACF,CACAJ,QAAQ,CAACnC,WAAW,CAACyC,IAAI,CAAC,CAAC,CAC7B,CAAC,CAED;AACArD,SAAS,CAAC,IAAM,CACd,GAAIuD,UAAU,CAAE,CACdD,OAAO,CAACC,UAAU,CAAC,CACnBH,SAAS,CAAC,IAAI,CAAC,CACjB,CACF,CAAC,CAAE,CAACG,UAAU,CAAC,CAAC,CAEhB,GAAI,CAACJ,MAAM,CACX;AACA,mBACA9B,IAAA,QAAK4C,SAAS,CAAC,aAAa,CAACC,OAAO,CAAEF,0BAA2B,CAAAG,QAAA,cAC/D9C,IAAA,QAAK4C,SAAS,CAAC,wBAAwB,CAAM,CAAC,CAC3C,CAAC,CAEN;AACA,mBACA1C,KAAA,QAAK0C,SAAS,CAAC,yBAAyB,CAAAE,QAAA,eACtC9C,IAAA,UAAO4C,SAAS,CAAC,qBAAqB,CAACG,IAAI,CAAC,MAAM,CAACC,WAAW,CAAC,gEAAc,CAACX,KAAK,CAAEL,IAAK,CAACiB,QAAQ,CAAEd,yBAA0B,CAACe,SAAS,CAAEX,0BAA2B,CAAC,CAAC,cACxKvC,IAAA,QAAKmD,GAAG,CAAEtB,eAAgB,CAACe,SAAS,CAAC,aAAa,CAACC,OAAO,CAAEF,0BAA2B,CAAAG,QAAA,cACrF9C,IAAA,QAAK4C,SAAS,CAAC,wBAAwB,CAAM,CAAC,CAC3C,CAAC,EACH,CAAC,CAER,CAAC,CAED;AACA,KAAM,CAAAQ,YAAY,CAAGA,CAAA,GAAM,CAEzB;AACA,KAAM,CAAEC,SAAU,CAAC,CAAGrE,SAAS,CAAC,CAAC,CAEjC;AACA,KAAM,CAAAsE,0BAA0B,CAAGA,CAAA,GAAM,CACvC,GAAI,CAAClD,SAAS,CAAE,OAChB,KAAM,CAAEmD,KAAM,CAAC,CAAGnD,SAAS,CAC3BsB,QAAQ,CAAClC,SAAS,CAAC+D,KAAK,CAAC,CAAC,CAC5B,CAAC,CACD;AACA,KAAM,CAAAC,0BAA0B,CAAGA,CAAA,GAAM,CACvC9B,QAAQ,CAACzC,SAAS,CAAC,CAAC,CAAC,CACvB,CAAC,CACD;AACA,KAAM,CAAAwE,2BAA2B,CAAGA,CAAA,GAAM,CACxCnD,cAAc,CAAC,CAAC,CAChBG,SAAS,CAAC,aAAa,CAAE,EAAE,CAAE,CAAEiD,IAAI,CAAEpE,SAAS,CAAC,CAAC,CAAEqE,OAAO,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAE,CAAC,CAAC,CACxElC,QAAQ,CAACpC,SAAS,CAAC,CAAC,CAAC,CACvB,CAAC,CAGD;AACA,GAAIoB,OAAO,EAAI2C,SAAS,IAAKjD,SAAS,SAATA,SAAS,iBAATA,SAAS,CAAEmD,KAAK,EAC7C,mBAAOvD,IAAA,QAAK4C,SAAS,CAAC,cAAc,CAACC,OAAO,CAAEY,2BAA4B,CAAAX,QAAA,CAAE,MAAM,CAAM,CAAC,CACzF;AACA,GAAIpC,OAAO,CACX,mBAAOV,IAAA,QAAK4C,SAAS,CAAC,cAAc,CAACC,OAAO,CAAES,0BAA2B,CAAAR,QAAA,CAAE,OAAO,CAAM,CAAC,CACzF;AACA,mBAAO9C,IAAA,QAAK4C,SAAS,CAAC,cAAc,CAACC,OAAO,CAAEW,0BAA2B,CAAAV,QAAA,CAAE,KAAK,CAAM,CAAC,CACzF,CAAC,CAED;AACA,KAAM,CAAAe,YAAY,CAAGA,CAAA,GAAM,CAEzB;AACA,KAAM,CAAEC,WAAY,CAAC,CAAG9E,SAAS,CAAC,CAAC,CACnC;AACA,KAAM,CAAE+E,KAAK,CAAEC,OAAO,CAAEC,kBAAkB,CAAEC,UAAW,CAAC,CAAGvE,aAAa,CAAC,CAAC,CAE1E;AACA,KAAM,CAAAwE,iBAAiB,CAAIC,YAAuD,EAAM,CACtF,GAAI,CAACA,YAAY,CAAE,OACnB,KAAM,CAAEC,IAAK,CAAC,CAAGD,YAAY,CAE7B,GAAIC,IAAI,GAAK,KAAK,CAAEC,KAAK,CAAC,eAAe,CAAC,CAC1C,GAAID,IAAI,GAAK,IAAI,EAAIA,IAAI,GAAK,IAAI,CAAG3C,QAAQ,CAACzC,SAAS,CAAC,CAAC,CAAC,CAC1D,GAAIoF,IAAI,GAAK,IAAI,CAAEC,KAAK,CAAC,gBAAgB,CAAC,CAC1C,GAAID,IAAI,GAAK,IAAI,CAAE,OAEnBH,UAAU,CAAC,CAAC,CACZ,GAAI,CAAC9D,SAAS,CAAE,OAChB,KAAM,CAAEmD,KAAM,CAAC,CAAGnD,SAAS,CAC3BsB,QAAQ,CAAClC,SAAS,CAAC+D,KAAK,CAAC,CAAC,CAC5B,CAAC,CACD;AACA,KAAM,CAAAgB,kBAAkB,CAAIH,YAAwD,EAAK,CACvF,GAAI,CAACA,YAAY,CAAE,OACnB,KAAM,CAAEC,IAAK,CAAC,CAAGD,YAAY,CAE7B,GAAIC,IAAI,GAAK,KAAK,CAAEC,KAAK,CAAC,eAAe,CAAC,CAC1C,GAAID,IAAI,GAAK,IAAI,EAAIA,IAAI,GAAK,IAAI,EAAIA,IAAI,GAAK,IAAI,EAAIA,IAAI,GAAK,IAAI,CAAE3C,QAAQ,CAACzC,SAAS,CAAC,CAAC,CAAC,CAC3F,GAAIoF,IAAI,GAAK,IAAI,CAAEC,KAAK,CAAC,gBAAgB,CAAC,CAC1C,GAAID,IAAI,GAAK,IAAI,CAAE,OAEnB,GAAI,CAACP,WAAW,CAAE,OAClBpC,QAAQ,CAACvC,UAAU,CAAC,CAAC,CAAG,GAAG,CAAGD,iBAAiB,CAAC4E,WAAW,CAAC,CAAC,CAC/D,CAAC,CAED;AACA,KAAM,CAAAU,0BAA0B,CAAG,KAAAA,CAAA,GAAY,CAC7C,KAAM,CAAAC,WAAW,CAAGjE,OAAO,CAACiE,WAAW,CACvC,GAAI,CAACA,WAAW,CAAE,OAElB,KAAM,CAAAC,cAAwB,CAAG,EAAE,CAEnC,IAAK,KAAM,CAAAC,IAAI,GAAI,CAAAV,kBAAkB,CAAE,CACrC,KAAM,CAAAW,IAAI,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC3BD,IAAI,CAACE,MAAM,CAAC,MAAM,CAAEH,IAAI,CAAC,CAEzB,KAAM,CAAAI,GAAG,CAAG,KAAM,CAAAnF,iBAAiB,CAACgF,IAAI,CAAC,CACzC,GAAIG,GAAG,CAAEL,cAAc,CAACM,IAAI,CAACD,GAAG,CAAC,CACnC,CAEA,KAAM,CAAAE,YAAY,CAAG1E,QAAQ,GAAKpB,UAAU,CAAC,CAAC,CAAG,GAAG,CAAGE,gBAAgB,CAAC,CAAC,CACzE,GAAI4F,YAAY,CAAE,CAChB,KAAM,CAAAC,WAAgC,CAAG,CACvCnB,KAAK,CAAEC,OAAO,CAAEU,cAClB,CAAC,CACD5E,gBAAgB,CAACoF,WAAW,CAAET,WAAW,CAAC,CAACU,IAAI,CAAChB,iBAAiB,CAAC,CACpE,CAAC,IAAM,CACL,GAAI,CAACL,WAAW,CAAE,OAClB,KAAM,CAAAoB,WAAiC,CAAG,CACxCnB,KAAK,CAAEC,OAAO,CAAEU,cAClB,CAAC,CACD7E,iBAAiB,CAACiE,WAAW,CAAEoB,WAAW,CAAET,WAAW,CAAC,CAACU,IAAI,CAACZ,kBAAkB,CAAC,CACnF,CAGF,CAAC,CAED;AACA,GAAIR,KAAK,EAAIC,OAAO,CACpB,mBAAOhE,IAAA,QAAK4C,SAAS,CAAC,cAAc,CAACC,OAAO,CAAE2B,0BAA2B,CAAA1B,QAAA,CAAE,KAAK,CAAM,CAAC,CACvF;AACA,mBAAO9C,IAAA,QAAK4C,SAAS,CAAC,gBAAgB,CAAAE,QAAA,CAAE,KAAK,CAAM,CAAC,CACtD,CAAC,CAED;AACAnE,SAAS,CAAC,IAAM,CACd,KAAM,CAAAiC,UAAU,CAAGL,QAAQ,CAAC6E,UAAU,CAACnG,SAAS,CAAC,CAAC,CAAC,CACnD4B,WAAW,CAACD,UAAU,CAAC,CACvB,KAAM,CAAAE,UAAU,CAAGP,QAAQ,GAAKjB,SAAS,CAAC,CAAC,CAC3CyB,WAAW,CAACD,UAAU,CAAC,CACvB,KAAM,CAAAE,YAAY,CAAGT,QAAQ,CAAC6E,UAAU,CAAC7F,WAAW,CAAC,EAAE,CAAC,CAAC,CACzD0B,aAAa,CAACD,YAAY,CAAC,CAC3B,KAAM,CAAAE,iBAAiB,CAAGX,QAAQ,CAAC6E,UAAU,CAACjG,UAAU,CAAC,CAAC,CAAG,GAAG,CAAGD,iBAAiB,CAAC,EAAE,CAAC,CAAC,CACzFiC,kBAAkB,CAACD,iBAAiB,CAAC,CACrC,KAAM,CAAAE,gBAAgB,CAAGb,QAAQ,CAAC6E,UAAU,CAACjG,UAAU,CAAC,CAAC,CAAG,GAAG,CAAGE,gBAAgB,CAAC,CAAC,CAAC,CACrFgC,iBAAiB,CAACD,gBAAgB,CAAC,CACnC,KAAM,CAAAE,iBAAiB,CAAGf,QAAQ,CAAC6E,UAAU,CAACjG,UAAU,CAAC,CAAC,CAAG,GAAG,CAAGC,iBAAiB,CAAC,EAAE,CAAC,CAAC,CACzFmC,kBAAkB,CAACD,iBAAiB,CAAC,CACrC,KAAM,CAAAE,UAAU,CAAGjB,QAAQ,CAAC6E,UAAU,CAAC5F,SAAS,CAAC,EAAE,CAAC,CAAC,CACrDiC,WAAW,CAACD,UAAU,CAAC,CACzB,CAAC,CAAE,CAACjB,QAAQ,CAAC,CAAC,CACd;AACA5B,SAAS,CAAC,IAAM,CACdgC,QAAQ,CAACP,SAAS,GAAK,IAAI,CAAC,CAC9B,CAAC,CAAE,CAACA,SAAS,CAAC,CAAC,CAEf;AACA,mBACEJ,IAAA,QAAKqF,EAAE,CAAC,QAAQ,CAAAvC,QAAA,cACd5C,KAAA,QAAK0C,SAAS,CAAC,kBAAkB,CAAAE,QAAA,eAC/B5C,KAAA,QAAK0C,SAAS,CAAC,iBAAiB,CAACC,OAAO,CAAElB,kBAAmB,CAAAmB,QAAA,eAC3D9C,IAAA,QAAK4C,SAAS,CAAC,UAAU,CAAAE,QAAA,cACvB9C,IAAA,QAAK4C,SAAS,CAAC,qBAAqB,CAAAE,QAAA,CAAC,GAAC,CAAK,CAAC,CACzC,CAAC,cACN9C,IAAA,QAAK4C,SAAS,CAAC,aAAa,CAAAE,QAAA,CAAE,cAAc,CAAM,CAAC,EAChD,CAAC,cACN5C,KAAA,QAAK0C,SAAS,CAAC,kBAAkB,CAAAE,QAAA,EAC9B,CAAClC,UAAU,EAAIE,UAAU,EAAIE,YAAY,EAAIE,iBAAiB,gBAAKlB,IAAA,CAAC4B,YAAY,GAAE,CAAC,CACnF,CAACd,UAAU,EAAIE,YAAY,EAAIE,iBAAiB,EAAIM,UAAU,gBAAKxB,IAAA,CAACoD,YAAY,GAAE,CAAC,CACnF,CAAChC,gBAAgB,EAAIE,iBAAiB,gBAAKtB,IAAA,CAAC6D,YAAY,GAAE,CAAC,EACzD,CAAC,EACH,CAAC,CACH,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}