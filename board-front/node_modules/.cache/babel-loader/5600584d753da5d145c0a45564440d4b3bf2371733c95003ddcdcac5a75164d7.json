{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC815\\uC900\\\\Documents\\\\spring-react-mysql\\\\board-front\\\\src\\\\views\\\\Search\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { useNavigate, useParams } from 'react-router-dom';\nimport './style.css';\nimport { useEffect, useState } from 'react';\nimport BoardItem from 'components/BoardItem';\nimport { SEARCH_PATH } from 'constant';\nimport Pagination from 'components/Pagination';\nimport { GetRelationListRequest, getSearchBoardListRequest } from 'apis';\nimport { usePagination } from 'hooks';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//          component: 검색 화면 컴포넌트          //\nexport default function Search() {\n  _s();\n  //          function: 네비게이트 함수          //\n  const navigate = useNavigate();\n\n  //          state: searchWord path variable 상태          //\n  const {\n    searchWord\n  } = useParams();\n  //          state: 페이지네이션 관련 상태          //\n  const {\n    currentPage,\n    currentSection,\n    viewList,\n    viewPageList,\n    totalSection,\n    setCurrentPage,\n    setCurrentSection,\n    setTotalList\n  } = usePagination(5);\n  //          state: 이전 검색어 상태          //\n  const [preSearchWord, setPreSearchWord] = useState(null);\n  //          state: 검색 게시물 개수 상태          //\n  const [count, setCount] = useState(1);\n  //          state: 검색 게시물 리스트 상태          //\n\n  //          state: 연관 검색어 리스트 상태          //\n  const [relationList, setRelationList] = useState([]);\n\n  //          event handler: 연관 검색어 클릭 이벤트 처리          //\n  const onRelationWordClickHandler = word => {\n    navigate(SEARCH_PATH(word));\n  };\n\n  //          function: get search board list response 처리 함수          //\n  const getSearchBoardListResponse = responseBody => {\n    if (!responseBody) return;\n    const {\n      code\n    } = responseBody;\n    if (code === 'DBE') alert('데이터베이스 오류입니다.');\n    if (code !== 'SU') return;\n    if (!searchWord) return;\n    const {\n      searchList\n    } = responseBody;\n    setTotalList(searchList);\n    setCount(searchList.length);\n    setPreSearchWord(searchWord);\n  };\n  //          function: get relation list response 처리 함수          //\n  const GetRelationListResponse = responseBody => {\n    if (!responseBody) return;\n    const {\n      code\n    } = responseBody;\n    if (code === 'DBE') alert('데이터베이스 오류입니다.');\n    if (code !== 'SU') return;\n    if (!searchWord) return;\n    const {\n      searchList\n    } = responseBody;\n  };\n\n  //          effect: search word 상태 변경 시 실행될 함수          //\n  useEffect(() => {\n    if (!searchWord) return;\n    getSearchBoardListRequest(searchWord, preSearchWord).then(getSearchBoardListResponse);\n    GetRelationListRequest(searchWord).then(GetRelationListResponse);\n  }, [searchWord]);\n\n  //          render: 검색 화면 컴포넌트 렌더링          //\n  if (!searchWord) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"search-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-title-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"search-title-emphasis\",\n            children: searchWord\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 41\n          }, this), `에 대한 검색 결과입니다.`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-count\",\n          children: count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-contents-box\",\n        children: [count === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-contents-nothing\",\n          children: `검색 결과가 없습니다.`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-contents\",\n          children: viewList.map(boardListItem => /*#__PURE__*/_jsxDEV(BoardItem, {\n            boardListItem: boardListItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 75\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-relation-box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-relation-card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"search-relation-card-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"search-relation-card-title\",\n                children: '연관 검색어'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this), relationList.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"search-relation-card-contents-nothing\",\n                children: `연관 검색어가 없습니다.`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"search-relation-card-contents\",\n                children: relationList.map(word => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"word-badge\",\n                  onClick: () => onRelationWordClickHandler(word),\n                  children: word\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 90\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-pagination-box\",\n        children: count !== 0 && /*#__PURE__*/_jsxDEV(Pagination, {\n          currentPage: currentPage,\n          currentSection: currentSection,\n          setCurrentPage: setCurrentPage,\n          setCurrentSection: setCurrentSection,\n          viewPageList: viewPageList,\n          totalSection: totalSection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"MKYN/bvfVD1CFA1TboIGFjd+c6M=\", false, function () {\n  return [useNavigate, useParams, usePagination];\n});\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["useNavigate","useParams","useEffect","useState","BoardItem","SEARCH_PATH","Pagination","GetRelationListRequest","getSearchBoardListRequest","usePagination","Fragment","_Fragment","jsxDEV","_jsxDEV","Search","_s","navigate","searchWord","currentPage","currentSection","viewList","viewPageList","totalSection","setCurrentPage","setCurrentSection","setTotalList","preSearchWord","setPreSearchWord","count","setCount","relationList","setRelationList","onRelationWordClickHandler","word","getSearchBoardListResponse","responseBody","code","alert","searchList","length","GetRelationListResponse","then","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","boardListItem","onClick","_c","$RefreshReg$"],"sources":["C:/Users/정준/Documents/spring-react-mysql/board-front/src/views/Search/index.tsx"],"sourcesContent":["import { useNavigate, useParams } from 'react-router-dom'\r\nimport './style.css'\r\nimport { useEffect, useState } from 'react';\r\nimport { BoardListItem } from 'types/interface';\r\nimport { latestBoardListMock } from 'mocks';\r\nimport BoardItem from 'components/BoardItem';\r\nimport { SEARCH_PATH } from 'constant';\r\nimport Pagination from 'components/Pagination';\r\nimport { GetRelationListRequest, getSearchBoardListRequest } from 'apis';\r\nimport { GetSearchBoardListResponseDto } from 'apis/response/board';\r\nimport { ResponseDto } from 'apis/response';\r\nimport { usePagination } from 'hooks';\r\nimport { GetRelationListResponseDto } from 'apis/response/search';\r\n\r\n//          component: 검색 화면 컴포넌트          //\r\nexport default function Search() {\r\n\r\n  //          function: 네비게이트 함수          //\r\n  const navigate = useNavigate();\r\n\r\n  //          state: searchWord path variable 상태          //\r\n  const { searchWord } = useParams();\r\n  //          state: 페이지네이션 관련 상태          //\r\n  const {\r\n          currentPage, currentSection, viewList, viewPageList, totalSection,\r\n          setCurrentPage, setCurrentSection, setTotalList\r\n      } = usePagination<BoardListItem>(5);\r\n  //          state: 이전 검색어 상태          //\r\n  const [preSearchWord, setPreSearchWord] = useState<string | null>(null);\r\n  //          state: 검색 게시물 개수 상태          //\r\n  const [count, setCount] = useState<number>(1);\r\n  //          state: 검색 게시물 리스트 상태          //\r\n  \r\n  //          state: 연관 검색어 리스트 상태          //\r\n  const [relationList, setRelationList] = useState<string[]>([]);\r\n\r\n  //          event handler: 연관 검색어 클릭 이벤트 처리          //\r\n  const onRelationWordClickHandler = (word: string) => {\r\n    navigate(SEARCH_PATH(word));\r\n  }\r\n\r\n  //          function: get search board list response 처리 함수          //\r\n  const getSearchBoardListResponse = (responseBody: GetSearchBoardListResponseDto | ResponseDto | null) => {\r\n    if (!responseBody) return;\r\n    const { code } = responseBody;\r\n\r\n    if (code === 'DBE') alert('데이터베이스 오류입니다.');\r\n    if (code !== 'SU') return;\r\n\r\n    if (!searchWord) return;\r\n    const { searchList } = responseBody as GetSearchBoardListResponseDto;\r\n    setTotalList(searchList);\r\n    setCount(searchList.length);\r\n    setPreSearchWord(searchWord);\r\n  }\r\n  //          function: get relation list response 처리 함수          //\r\n  const GetRelationListResponse = (responseBody: GetRelationListResponseDto | ResponseDto | null) => {\r\n    if (!responseBody) return;\r\n    const { code } = responseBody;\r\n\r\n    if (code === 'DBE') alert('데이터베이스 오류입니다.');\r\n    if (code !== 'SU') return;\r\n\r\n    if (!searchWord) return;\r\n    const { searchList } = responseBody as GetSearchBoardListResponseDto;\r\n  }\r\n\r\n  //          effect: search word 상태 변경 시 실행될 함수          //\r\n  useEffect(() => {\r\n    if (!searchWord) return;\r\n    getSearchBoardListRequest(searchWord, preSearchWord).then(getSearchBoardListResponse)\r\n    GetRelationListRequest(searchWord).then(GetRelationListResponse)\r\n  }, [searchWord]);\r\n\r\n  //          render: 검색 화면 컴포넌트 렌더링          //\r\n  if (!searchWord) return (<></>);\r\n  return (\r\n    <div id='search-wrapper'>\r\n      <div className='search-container'>\r\n        <div className='search-title-box'>\r\n          <div className='search-title'><span className='search-title-emphasis'>{searchWord}</span>{`에 대한 검색 결과입니다.`}</div>\r\n          <div className='search-count'>{count}</div>\r\n        </div>\r\n        <div className='search-contents-box'>\r\n          {count === 0 ? \r\n          <div className='search-contents-nothing'>{`검색 결과가 없습니다.`}</div> :\r\n          <div className='search-contents'>{viewList.map(boardListItem => <BoardItem boardListItem={boardListItem} />)}</div>\r\n          }\r\n          <div className='search-relation-box'>\r\n            <div className='search-relation-card'>\r\n              <div className='search-relation-card-container'>\r\n                <div className='search-relation-card-title'>{'연관 검색어'}</div>\r\n                {relationList.length === 0 ?\r\n                <div className='search-relation-card-contents-nothing'>{`연관 검색어가 없습니다.`}</div> : \r\n                <div className='search-relation-card-contents'>{relationList.map(word => <div className='word-badge' onClick={() => onRelationWordClickHandler(word)}>{word}</div>)}</div>\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='search-pagination-box'>\r\n          {count !== 0 && \r\n          <Pagination\r\n            currentPage={currentPage}\r\n            currentSection={currentSection}\r\n            setCurrentPage={setCurrentPage}\r\n            setCurrentSection={setCurrentSection}\r\n            viewPageList={viewPageList}\r\n            totalSection={totalSection}\r\n          />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}