{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC815\\uC900\\\\Documents\\\\spring-react-mysql\\\\board-front\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { Route, Routes } from 'react-router-dom';\nimport Main from 'views/Main';\nimport Authentication from 'views/Authentication';\nimport Search from 'views/Search';\nimport User from 'views/User';\nimport BoardDetail from 'views/Board/Detail';\nimport BoardWrite from 'views/Board/Write';\nimport BoardUpdate from 'views/Board/Update';\nimport Container from 'layouts/Container';\nimport { MAIN_PATH, AUTH_PATH, SEARCH_PATH, USER_PATH, BOARD_PATH, BOARD_WRITE_PATH, BOARD_DETAIL_PATH, BOARD_UPDATE_PATH } from 'constant';\nimport { useEffect, useState } from 'react';\nimport { useLoginUserStore } from 'stores';\nimport { getSignInUserRequest } from 'apis';\n\n//          component: Application 컴포넌트         //\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //          state: 로그인 유저 전역 상태          //\n  const {\n    setLoginUser,\n    resetLoginUser\n  } = useLoginUserStore();\n  //          state: cookie 상태          //\n  const [cookies, setCookie] = useState();\n\n  //          effect: accessToken cookie 값이 변경될 때 마다 실행할 함수         //\n  useEffect(() => {\n    if (!cookies.accessToken) {\n      resetLoginUser();\n      return;\n    }\n    getSignInUserRequest(cookies.accessToken).then(getSignInUserResponse);\n  }, [cookies.accessToken]);\n\n  //          render: Application 컴포넌트 렌더링         //\n  // description: 메인 화면 : '/' - Main //\n  // description: 로그인 + 회원가입 화면 : '/auth' - Authentication //\n  // description: 검색 화면 : '/search/:searchWord' - Search //\n  // description: 유저 페이지 화면 : '/user/:userEmail' - User //\n  // description: 게시물 상세보기 화면 : '/board/detail/:boardNumber' - BoardDetail //\n  // description: 게시물 작성하기 화면 : '/board/write' - BoardWrite //\n  // description: 게시물 수정하기 화면 : '/board/update/:boardNumber' - BoardUpdate //\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: /*#__PURE__*/_jsxDEV(Route, {\n      element: /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 23\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: MAIN_PATH(),\n        element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: AUTH_PATH(),\n        element: /*#__PURE__*/_jsxDEV(Authentication, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: SEARCH_PATH(':searchWord'),\n        element: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: USER_PATH(':userEmail'),\n        element: /*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: BOARD_PATH(),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: BOARD_WRITE_PATH(),\n          element: /*#__PURE__*/_jsxDEV(BoardWrite, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: BOARD_DETAIL_PATH(':boardNumber'),\n          element: /*#__PURE__*/_jsxDEV(BoardDetail, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 68\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: BOARD_UPDATE_PATH(':boardNumber'),\n          element: /*#__PURE__*/_jsxDEV(BoardUpdate, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 68\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"404 Not Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HkYE0HB82CC3tCCuJezJ1p4SYdo=\", false, function () {\n  return [useLoginUserStore];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Route","Routes","Main","Authentication","Search","User","BoardDetail","BoardWrite","BoardUpdate","Container","MAIN_PATH","AUTH_PATH","SEARCH_PATH","USER_PATH","BOARD_PATH","BOARD_WRITE_PATH","BOARD_DETAIL_PATH","BOARD_UPDATE_PATH","useEffect","useState","useLoginUserStore","getSignInUserRequest","jsxDEV","_jsxDEV","App","_s","setLoginUser","resetLoginUser","cookies","setCookie","accessToken","then","getSignInUserResponse","children","element","fileName","_jsxFileName","lineNumber","columnNumber","path","_c","$RefreshReg$"],"sources":["C:/Users/정준/Documents/spring-react-mysql/board-front/src/App.tsx"],"sourcesContent":["import './App.css';\nimport { Route, Routes } from 'react-router-dom';\nimport Main from 'views/Main';\nimport Authentication from 'views/Authentication';\nimport Search from 'views/Search';\nimport User from 'views/User';\nimport BoardDetail from 'views/Board/Detail';\nimport BoardWrite from 'views/Board/Write';\nimport BoardUpdate from 'views/Board/Update';\nimport Container from 'layouts/Container';\nimport { MAIN_PATH, AUTH_PATH, SEARCH_PATH, USER_PATH, BOARD_PATH, BOARD_WRITE_PATH, BOARD_DETAIL_PATH, BOARD_UPDATE_PATH } from 'constant';\nimport { useEffect, useState } from 'react';\nimport { useLoginUserStore } from 'stores';\nimport { getSignInUserRequest } from 'apis';\n\n\n//          component: Application 컴포넌트         //\nfunction App() {\n\n  //          state: 로그인 유저 전역 상태          //\n  const { setLoginUser, resetLoginUser } = useLoginUserStore();\n  //          state: cookie 상태          //\n  const [cookies, setCookie] = useState();\n\n  //          effect: accessToken cookie 값이 변경될 때 마다 실행할 함수         //\n  useEffect(() => {\n    if (!cookies.accessToken) {\n      resetLoginUser();\n      return;\n    }\n    getSignInUserRequest(cookies.accessToken).then(getSignInUserResponse)\n  }, [cookies.accessToken]);\n\n  //          render: Application 컴포넌트 렌더링         //\n  // description: 메인 화면 : '/' - Main //\n  // description: 로그인 + 회원가입 화면 : '/auth' - Authentication //\n  // description: 검색 화면 : '/search/:searchWord' - Search //\n  // description: 유저 페이지 화면 : '/user/:userEmail' - User //\n  // description: 게시물 상세보기 화면 : '/board/detail/:boardNumber' - BoardDetail //\n  // description: 게시물 작성하기 화면 : '/board/write' - BoardWrite //\n  // description: 게시물 수정하기 화면 : '/board/update/:boardNumber' - BoardUpdate //\n  return (\n    <Routes>\n      <Route element={<Container />}>\n        <Route path={MAIN_PATH()} element={<Main />} />\n        <Route path={AUTH_PATH()} element={<Authentication />} />\n        <Route path={SEARCH_PATH(':searchWord')} element={<Search />} />\n        <Route path={USER_PATH(':userEmail')} element={<User />} />\n        <Route path={BOARD_PATH()}>\n          <Route path={BOARD_WRITE_PATH()} element={<BoardWrite />} />\n          <Route path={BOARD_DETAIL_PATH(':boardNumber')} element={<BoardDetail />} />\n          <Route path={BOARD_UPDATE_PATH(':boardNumber')} element={<BoardUpdate />} />\n        </Route>\n        <Route path='*' element={<h1>404 Not Found</h1>}></Route>\n      </Route>\n    </Routes>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}