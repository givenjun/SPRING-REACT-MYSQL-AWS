{"ast":null,"code":"import{useEffect,useRef,useState}from'react';import'./style.css';import FavoriteItem from'components/FavoriteItem';import CommentItem from'components/CommentItem';import Pagination from'components/Pagination';import defaultProfileImage from'assets/image/default-profile-image.png';import{useLoginUserStore}from'stores';import{useNavigate,useParams}from'react-router-dom';import{BOARD_PATH,BOARD_UPDATE_PATH,MAIN_PATH,USER_PATH}from'constant';import{deleteBoardRequest,getBoardRequest,getCommentListRequest,getFavoriteListRequest,increaseViewCountRequest,postCommentRequest,putFavoriteRequest}from'apis';import dayjs from'dayjs';import{useCookies}from'react-cookie';import{usePagination}from'hooks';//          component: 게시물 상세 화면 컴포넌트          //\nimport{Fragment as _Fragment,jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function BoardDetail(){//          state: 게시물 번호 path variable 상태         //\nconst{boardNumber}=useParams();//          state: 로그인 유저 상태         //\nconst{loginUser}=useLoginUserStore();//          state: 쿠키 상태         //\nconst[cookies,setCookies]=useCookies();//          function: 네이게이트 함수         //\nconst navigate=useNavigate();//          function: increase view count response 처리 함수          //\nconst increaseViewCountResponse=responseBody=>{if(!responseBody)return;const{code}=responseBody;if(code==='NB')alert('존재하지 않는 게시물입니다.');if(code==='DBE')alert('데이터베이스 오류입니다.');};//          component: 게시물 상세 상단 컴포넌트          //\nconst BoardDetailTop=()=>{//          state: 작성자 여부 상태          //\nconst[isWriter,setWriter]=useState(false);//          state: 게시물 상태          //\nconst[board,setBoard]=useState(null);//          state: more 버튼 상태         //s\nconst[showMore,setShowMore]=useState(false);//          function: 작성일 포맷 변경 함수           //\nconst getWriteDatetimeFormat=()=>{if(!board)return'';const date=dayjs(board.writeDatetime);return date.format('YYYY. MM. DD.');};//          function: get board response 처리 함수           //\nconst getBoardResponse=responseBody=>{if(!responseBody)return;const{code}=responseBody;if(code==='NB')alert('존재하지 않는 게시물입니다.');if(code==='DBE')alert('데이터베이스 오류입니다.');if(code!=='SU'){navigate(MAIN_PATH());return;}const board={...responseBody};setBoard(board);if(!loginUser){setWriter(false);return;}const isWriter=loginUser.email===board.writerEmail;setWriter(isWriter);};//          function: delete board response 처리 함수           //\nconst deleteBoardResponse=responseBody=>{if(!responseBody)return;const{code}=responseBody;if(code==='VF')alert('잘못된 접근입니다.');if(code==='NU')alert('존재하지 않는 유저입니다.');if(code==='NB')alert('존재하지 않는 게시물입니다.');if(code==='AF')alert('인증에 실패했습니다.');if(code==='NP')alert('권한이 없습니다.');if(code==='DBE')alert('데이터베이스 오류입니다.');if(code!=='SU')return;navigate(MAIN_PATH());};//          event handler: 닉네임 클릭 이벤트 처리          //\nconst onNicknameClickHandler=()=>{if(!board)return;navigate(USER_PATH(board.writerEmail));};//          event handler: 더보기 버튼 클릭 이벤트 처리          //\nconst onMoreButtonClickHandler=()=>{setShowMore(!showMore);};//          event handler: 수정 버튼 클릭 이벤트 처리          //\nconst onUpdateButtonClickHandler=()=>{if(!board||!loginUser)return;if(loginUser.email!==board.writerEmail)return;navigate(BOARD_PATH()+'/'+BOARD_UPDATE_PATH(board.boardNumber));};//          event handler: 삭제 버튼 클릭 이벤트 처리          //\nconst onDeleteButtonClickHandler=()=>{if(!boardNumber||!board||!loginUser||!cookies.accessToken)return;if(loginUser.email!==board.writerEmail)return;deleteBoardRequest(boardNumber,cookies.accessToken).then(deleteBoardResponse);};//          effect: 게시물 번호 path variable이 바뀔 때 마다 게시물 불러오기          //\nuseEffect(()=>{if(!boardNumber){navigate(MAIN_PATH());return;}getBoardRequest(boardNumber).then(getBoardResponse);},[boardNumber]);//          render: 게시물 상세 상단 컴포넌트 렌더링          //\nif(!board)return/*#__PURE__*/_jsx(_Fragment,{});return/*#__PURE__*/_jsxs(\"div\",{id:\"board-detail-top\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"board-detail-top-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"board-detail-title\",children:board.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"board-detail-top-sub-box\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"board-detail-write-info-box\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"board-detail-writer-profile-image\",style:{backgroundImage:`url(${board!==null&&board!==void 0&&board.writerProfileImage?board.writerProfileImage:defaultProfileImage})`}}),/*#__PURE__*/_jsx(\"div\",{className:\"board-detail-writer-ninkname\",onClick:onNicknameClickHandler,children:board.writerNickname}),/*#__PURE__*/_jsx(\"div\",{className:\"board-detial-info-devider\",children:'|'}),/*#__PURE__*/_jsx(\"div\",{className:\"board-detail-write-date\",children:getWriteDatetimeFormat()})]}),isWriter&&/*#__PURE__*/_jsx(\"div\",{className:\"icon-button\",onClick:onMoreButtonClickHandler,children:/*#__PURE__*/_jsx(\"div\",{className:\"icon more-icon\"})}),showMore&&/*#__PURE__*/_jsxs(\"div\",{className:\"board-detail-more-box\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"board-detail-update-button\",onClick:onUpdateButtonClickHandler,children:'수정'}),/*#__PURE__*/_jsx(\"div\",{className:\"divider\"}),/*#__PURE__*/_jsx(\"div\",{className:\"board-detail-delete-button\",onClick:onDeleteButtonClickHandler,children:'삭제'})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"divider\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"board-detail-top-main\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"board-detail-main-text\",children:board.content}),board.boardImageList.map(image=>/*#__PURE__*/_jsx(\"img\",{className:\"board-detail-main-image\",src:image,alt:\"\"}))]})]});};//          component: 게시물 상세 하단 컴포넌트          //\nconst BoardDetailBottom=()=>{//          state: 댓글 textarea  참조 상태          //\nconst commentRef=useRef(null);//          state: 페이지네이션 관련 상태          //\nconst{currentPage,currentSection,viewList,viewPageList,totalSection,setCurrentPage,setCurrentSection,setTotalList}=usePagination(3);//          state: 좋아요 리스트 상태          //\nconst[favoriteList,setFavoriteList]=useState([]);//          state: 좋아요 상태          //\nconst[isFavorite,setFavorite]=useState(false);//          state: 좋아요 상자 보기 상태          //\nconst[showFavorite,setShowFavorite]=useState(false);//          state: 전체 댓글 개수 상태          //\nconst[totalCommentCount,setTotalCommentCount]=useState(0);//          state: 댓글 상태          //\nconst[isComment,setComment]=useState('');//          state: 댓글 상자 보기 상태          //\nconst[showComment,setShowComment]=useState(false);//          function: get favorite list response 처리 함수          //\nconst getFavoriteListResponse=responseBody=>{if(!responseBody)return;const{code}=responseBody;if(code==='NB')alert('존재하지 않는 게시물입니다.');if(code==='DBE')alert('데이터베이스 오류입니다.');if(code!=='SU')return;const{favoriteList}=responseBody;setFavoriteList(favoriteList);if(!loginUser){setFavorite(false);return;}const isFavorite=favoriteList.findIndex(favorite=>favorite.email===loginUser.email)!==-1;setFavorite(isFavorite);};//          function: get comments list response 처리 함수          //\nconst getCommentListResponse=responseBody=>{if(!responseBody)return;const{code}=responseBody;if(code==='NB')alert('존재하지 않는 게시물입니다.');if(code==='DBE')alert('데이터베이스 오류입니다.');if(code!=='SU')return;const{commentList}=responseBody;setTotalList(commentList);setTotalCommentCount(commentList.length);};//          function: put favorite response 처리 함수          //\nconst putFavoriteResponse=responseBody=>{if(!responseBody)return;const{code}=responseBody;if(code==='VF')alert('잘못된 접근입니다.');if(code==='NU')alert('존재하지 않는 유저입니다.');if(code==='NB')alert('존재하지 않는 게시물입니다.');if(code==='AF')alert('인증에 실패했습니다.');if(code==='DBE')alert('데이터베이스 오류입니다.');if(code!=='SU')return;if(!boardNumber)return;getFavoriteListRequest(boardNumber).then(getFavoriteListResponse);};//          function: post comment response 처리 함수          //\nconst postCommentResponse=responseBody=>{if(!responseBody)return;const{code}=responseBody;if(code==='VF')alert('잘못된 접근입니다.');if(code==='NU')alert('존재하지 않는 유저입니다.');if(code==='NB')alert('존재하지 않는 게시물입니다.');if(code==='AF')alert('인증에 실패했습니다.');if(code==='DBE')alert('데이터베이스 오류입니다.');if(code!=='SU')return;setComment('');if(!boardNumber)return;getCommentListRequest(boardNumber).then(getCommentListResponse);};//          event handler: 좋아요 클릭 이벤트 처리           //\nconst onFavoriteClickHandler=()=>{if(!boardNumber||!loginUser||!cookies.accessToken)return;putFavoriteRequest(boardNumber,cookies.accessToken).then(putFavoriteResponse);};//          event handler: 좋아요 상자 보기 클릭 이벤트 처리           //\nconst onFavoriteShowClickHandler=()=>{setShowFavorite(!showFavorite);};//          event handler: 댓글 상자 보기 클릭 이벤트 처리           //\nconst onCommentShowClickHandler=()=>{setShowComment(!showComment);};//          event handler: 댓글 작성 버튼 클릭 이벤트 처리           //\nconst onCommentSubmitButtonClickHandler=()=>{if(!isComment||!boardNumber||!loginUser||!cookies.accessToken)return;const requestBody={content:isComment};postCommentRequest(boardNumber,requestBody,cookies.accessToken).then(postCommentResponse);};//          event handler: 댓글 변경 이벤트 처리           //\nconst onCommentChangeHandler=event=>{const{value}=event.target;setComment(value);if(!commentRef.current)return;commentRef.current.style.height='auto';commentRef.current.style.height=`${commentRef.current.scrollHeight}px`;};//          effect: 게시물 번호 path variable이 바뀔 때 마다 좋아요 및 댓글 리스트 불러오기           //\nuseEffect(()=>{if(!boardNumber)return;getFavoriteListRequest(boardNumber).then(getFavoriteListResponse);getCommentListRequest(boardNumber).then(getCommentListResponse);},[boardNumber]);//          render: 게시물 상세 하단 컴포넌트 렌더링          //\nreturn/*#__PURE__*/_jsxs(\"div\",{id:\"board-detail-bottom\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"board-detail-bottom-button-box\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"board-detail-bottom-button-group\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"icon-button\",onClick:onFavoriteClickHandler,children:isFavorite?/*#__PURE__*/_jsx(\"div\",{className:\"icon favorite-fill-icon\"}):/*#__PURE__*/_jsx(\"div\",{className:\"icon favorite-light-icon\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"board-detial-bottom-button-text\",children:`좋아요 ${favoriteList.length}`}),/*#__PURE__*/_jsx(\"div\",{className:\"icon-button\",onClick:onFavoriteShowClickHandler,children:showFavorite?/*#__PURE__*/_jsx(\"div\",{className:\"icon up-light-icon\"}):/*#__PURE__*/_jsx(\"div\",{className:\"icon down-light-icon\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"board-detail-bottom-button-group\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"icon-button\",children:/*#__PURE__*/_jsx(\"div\",{className:\"icon comment-fill-icon\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"board-detial-bottom-button-text\",children:`댓글 ${totalCommentCount}`}),/*#__PURE__*/_jsx(\"div\",{className:\"icon-button\",onClick:onCommentShowClickHandler,children:showComment?/*#__PURE__*/_jsx(\"div\",{className:\"icon up-light-icon\"}):/*#__PURE__*/_jsx(\"div\",{className:\"icon down-light-icon\"})})]})]}),showFavorite?/*#__PURE__*/_jsx(\"div\",{className:\"board-detail-bottom-favorite-box\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"board-detail-bottom-favorite-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"board-detail-bottom-favorite-title\",children:['좋아요 ',/*#__PURE__*/_jsx(\"span\",{className:\"emphasis\",children:favoriteList.length})]}),/*#__PURE__*/_jsx(\"div\",{className:\"board-detail-bottom-favorite-contents\",children:favoriteList.map(item=>/*#__PURE__*/_jsx(FavoriteItem,{favoriteListItem:item}))})]})}):/*#__PURE__*/_jsx(_Fragment,{}),showComment&&/*#__PURE__*/_jsxs(\"div\",{className:\"board-detail-bottom-comment-box\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"board-detail-bottom-comment-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"board-detail-bottom-comment-title\",children:['댓글 ',/*#__PURE__*/_jsx(\"span\",{className:\"emphasis\",children:totalCommentCount})]}),/*#__PURE__*/_jsx(\"div\",{className:\"board-detail-bottom-comment-list-container\",children:viewList.map(item=>/*#__PURE__*/_jsx(CommentItem,{commentListItem:item}))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"divider\"}),/*#__PURE__*/_jsx(\"div\",{className:\"board-detail-bottom-comment-pagination-box\",children:/*#__PURE__*/_jsx(Pagination,{currentPage:currentPage,currentSection:currentSection,setCurrentPage:setCurrentPage,setCurrentSection:setCurrentSection,viewPageList:viewPageList,totalSection:totalSection})}),loginUser!==null&&/*#__PURE__*/_jsx(\"div\",{className:\"board-detail-bottom-comment-input-box\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"board-detail-bottom-comment-input-container\",children:[/*#__PURE__*/_jsx(\"textarea\",{ref:commentRef,className:\"board-detail-bottom-comment-textarea\",placeholder:\"\\uB313\\uAE00\\uC744 \\uC791\\uC131\\uD574\\uC8FC\\uC138\\uC694.\",value:isComment,onChange:onCommentChangeHandler}),/*#__PURE__*/_jsx(\"div\",{className:\"board-detail-bottom-comment-button-box\",children:/*#__PURE__*/_jsx(\"div\",{className:isComment===''?'disable-button':'black-button',onClick:onCommentSubmitButtonClickHandler,children:'댓글달기'})})]})})]})]});};//          effect: 게시물 번호 path variable이 바뀔 때 마다 게시물 조회수 증가          //\nlet effectFlag=false;useEffect(()=>{if(!boardNumber)return;if(effectFlag){return;}increaseViewCountRequest(boardNumber).then(increaseViewCountResponse);effectFlag=true;},[boardNumber]);//          render: 게시물 상세 화면 컴포넌트 렌더링          //\nreturn/*#__PURE__*/_jsx(\"div\",{id:\"board-detail-wrapper\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"board-detail-container\",children:[/*#__PURE__*/_jsx(BoardDetailTop,{}),/*#__PURE__*/_jsx(BoardDetailBottom,{})]})});}","map":{"version":3,"names":["useEffect","useRef","useState","FavoriteItem","CommentItem","Pagination","defaultProfileImage","useLoginUserStore","useNavigate","useParams","BOARD_PATH","BOARD_UPDATE_PATH","MAIN_PATH","USER_PATH","deleteBoardRequest","getBoardRequest","getCommentListRequest","getFavoriteListRequest","increaseViewCountRequest","postCommentRequest","putFavoriteRequest","dayjs","useCookies","usePagination","Fragment","_Fragment","jsx","_jsx","jsxs","_jsxs","BoardDetail","boardNumber","loginUser","cookies","setCookies","navigate","increaseViewCountResponse","responseBody","code","alert","BoardDetailTop","isWriter","setWriter","board","setBoard","showMore","setShowMore","getWriteDatetimeFormat","date","writeDatetime","format","getBoardResponse","email","writerEmail","deleteBoardResponse","onNicknameClickHandler","onMoreButtonClickHandler","onUpdateButtonClickHandler","onDeleteButtonClickHandler","accessToken","then","id","children","className","title","style","backgroundImage","writerProfileImage","onClick","writerNickname","content","boardImageList","map","image","src","alt","BoardDetailBottom","commentRef","currentPage","currentSection","viewList","viewPageList","totalSection","setCurrentPage","setCurrentSection","setTotalList","favoriteList","setFavoriteList","isFavorite","setFavorite","showFavorite","setShowFavorite","totalCommentCount","setTotalCommentCount","isComment","setComment","showComment","setShowComment","getFavoriteListResponse","findIndex","favorite","getCommentListResponse","commentList","length","putFavoriteResponse","postCommentResponse","onFavoriteClickHandler","onFavoriteShowClickHandler","onCommentShowClickHandler","onCommentSubmitButtonClickHandler","requestBody","onCommentChangeHandler","event","value","target","current","height","scrollHeight","item","favoriteListItem","commentListItem","ref","placeholder","onChange","effectFlag"],"sources":["C:/Users/정준/Documents/spring-react-mysql/board-front/src/views/Board/Detail/index.tsx"],"sourcesContent":["import { ChangeEvent, Dispatch, SetStateAction, useEffect, useRef, useState } from 'react'\r\nimport './style.css'\r\nimport FavoriteItem from 'components/FavoriteItem';\r\nimport { Board, CommentListItem, FavoriteListItem } from 'types/interface';\r\nimport CommentItem from 'components/CommentItem';\r\nimport Pagination from 'components/Pagination';\r\nimport defaultProfileImage from 'assets/image/default-profile-image.png';\r\nimport { useLoginUserStore } from 'stores';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { BOARD_PATH, BOARD_UPDATE_PATH, MAIN_PATH, USER_PATH } from 'constant';\r\nimport { deleteBoardRequest, getBoardRequest, getCommentListRequest, getFavoriteListRequest, increaseViewCountRequest, postCommentRequest, putFavoriteRequest } from 'apis';\r\nimport { DeleteBoardResponseDto, GetBoardResponseDto, GetCommentListResponseDto, GetFavoriteListResponseDto, IncreaseViewCountResponseDto, PostCommentResponseDto, PutFavoriteResponseDto } from 'apis/response/board';\r\nimport { ResponseDto } from 'apis/response';\r\n\r\nimport dayjs from 'dayjs';\r\nimport { useCookies } from 'react-cookie';\r\nimport { PostCommentRequestDto } from 'apis/request/board';\r\nimport { usePagination } from 'hooks';\r\n\r\n//          component: 게시물 상세 화면 컴포넌트          //\r\nexport default function BoardDetail() {\r\n\r\n  //          state: 게시물 번호 path variable 상태         //\r\n  const { boardNumber } = useParams();\r\n  //          state: 로그인 유저 상태         //\r\n  const { loginUser } = useLoginUserStore();\r\n  //          state: 쿠키 상태         //\r\n  const [cookies, setCookies] = useCookies();\r\n\r\n  //          function: 네이게이트 함수         //\r\n  const navigate = useNavigate();\r\n  //          function: increase view count response 처리 함수          //\r\n  const increaseViewCountResponse = (responseBody: IncreaseViewCountResponseDto | ResponseDto | null) => {\r\n    if (!responseBody) return;\r\n    const { code } = responseBody;\r\n    if (code === 'NB') alert('존재하지 않는 게시물입니다.');\r\n    if (code === 'DBE') alert('데이터베이스 오류입니다.');\r\n  }\r\n\r\n  //          component: 게시물 상세 상단 컴포넌트          //\r\n  const BoardDetailTop = () => {\r\n\r\n    //          state: 작성자 여부 상태          //\r\n    const [isWriter, setWriter] = useState<boolean>(false);\r\n    //          state: 게시물 상태          //\r\n    const [board, setBoard] = useState<Board | null>(null);\r\n    //          state: more 버튼 상태         //s\r\n    const [showMore, setShowMore] = useState<boolean>(false);\r\n\r\n    //          function: 작성일 포맷 변경 함수           //\r\n    const getWriteDatetimeFormat = () => {\r\n      if (!board) return '';\r\n      const date = dayjs(board.writeDatetime);\r\n      return date.format('YYYY. MM. DD.');\r\n    }\r\n\r\n    //          function: get board response 처리 함수           //\r\n    const getBoardResponse = (responseBody: GetBoardResponseDto | ResponseDto | null) => {\r\n      if (!responseBody) return;\r\n      const { code } = responseBody;\r\n      if (code === 'NB') alert('존재하지 않는 게시물입니다.');\r\n      if (code === 'DBE') alert('데이터베이스 오류입니다.');\r\n      if (code !== 'SU') {\r\n        navigate(MAIN_PATH());\r\n        return;\r\n      }\r\n\r\n      const board: Board = { ...responseBody as GetBoardResponseDto };\r\n      setBoard(board);\r\n\r\n      if (!loginUser) {\r\n        setWriter(false);\r\n        return;\r\n      }\r\n      \r\n      const isWriter = loginUser.email === board.writerEmail;\r\n      setWriter(isWriter); \r\n    }\r\n    //          function: delete board response 처리 함수           //\r\n    const deleteBoardResponse = (responseBody: DeleteBoardResponseDto | ResponseDto | null) => {\r\n      if (!responseBody) return;\r\n      const { code } = responseBody;\r\n      if (code === 'VF') alert('잘못된 접근입니다.');\r\n      if (code === 'NU') alert('존재하지 않는 유저입니다.');\r\n      if (code === 'NB') alert('존재하지 않는 게시물입니다.');\r\n      if (code === 'AF') alert('인증에 실패했습니다.');\r\n      if (code === 'NP') alert('권한이 없습니다.');\r\n      if (code === 'DBE') alert('데이터베이스 오류입니다.');\r\n      if (code !== 'SU') return;\r\n\r\n      navigate(MAIN_PATH());\r\n      \r\n    }\r\n\r\n    //          event handler: 닉네임 클릭 이벤트 처리          //\r\n    const onNicknameClickHandler = () => {\r\n      if (!board) return;\r\n      navigate(USER_PATH(board.writerEmail));\r\n    }\r\n    //          event handler: 더보기 버튼 클릭 이벤트 처리          //\r\n    const onMoreButtonClickHandler = () => {\r\n      setShowMore(!showMore);\r\n    }\r\n    //          event handler: 수정 버튼 클릭 이벤트 처리          //\r\n    const onUpdateButtonClickHandler = () => {\r\n      if (!board || !loginUser) return;\r\n      if (loginUser.email !== board.writerEmail) return;\r\n      navigate(BOARD_PATH() + '/' + BOARD_UPDATE_PATH(board.boardNumber));\r\n    }\r\n    //          event handler: 삭제 버튼 클릭 이벤트 처리          //\r\n    const onDeleteButtonClickHandler = () => {\r\n      if (!boardNumber || !board || !loginUser || !cookies.accessToken) return;\r\n      if (loginUser.email !== board.writerEmail) return;\r\n      \r\n      deleteBoardRequest(boardNumber, cookies.accessToken).then(deleteBoardResponse);\r\n    }\r\n\r\n    //          effect: 게시물 번호 path variable이 바뀔 때 마다 게시물 불러오기          //\r\n    useEffect(() => {\r\n      if (!boardNumber) {\r\n        navigate(MAIN_PATH());\r\n        return;\r\n      }\r\n      getBoardRequest(boardNumber).then(getBoardResponse);\r\n\r\n    }, [boardNumber]);\r\n\r\n    //          render: 게시물 상세 상단 컴포넌트 렌더링          //\r\n    if (!board) return <></>\r\n    return (\r\n      <div id='board-detail-top'>\r\n        <div className='board-detail-top-header'>\r\n          <div className='board-detail-title'>{board.title}</div>\r\n          <div className='board-detail-top-sub-box'>\r\n            <div className=\"board-detail-write-info-box\">\r\n              <div className='board-detail-writer-profile-image' style={{backgroundImage: `url(${board?.writerProfileImage ? board.writerProfileImage : defaultProfileImage})`}}></div>\r\n              <div className='board-detail-writer-ninkname' onClick={onNicknameClickHandler}>{board.writerNickname}</div>\r\n              <div className='board-detial-info-devider'>{'|'}</div>\r\n              <div className='board-detail-write-date'>{getWriteDatetimeFormat()}</div>\r\n            </div>\r\n            {isWriter &&\r\n            <div className='icon-button' onClick={onMoreButtonClickHandler}>\r\n              <div className='icon more-icon'></div>\r\n            </div>\r\n            }\r\n            {showMore && \r\n            <div className='board-detail-more-box'>\r\n              <div className='board-detail-update-button' onClick={onUpdateButtonClickHandler}>{'수정'}</div>\r\n              <div className='divider'></div>\r\n              <div className='board-detail-delete-button' onClick={onDeleteButtonClickHandler}>{'삭제'}</div>\r\n            </div>\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className='divider'></div>\r\n        <div className='board-detail-top-main'>\r\n          <div className='board-detail-main-text'>{board.content}</div>\r\n          {board.boardImageList.map(image => <img className='board-detail-main-image' src={image} alt=\"\"></img>)}\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  }\r\n  //          component: 게시물 상세 하단 컴포넌트          //\r\n  const BoardDetailBottom = () => {\r\n\r\n    //          state: 댓글 textarea  참조 상태          //\r\n    const commentRef = useRef<HTMLTextAreaElement | null>(null);\r\n\r\n    //          state: 페이지네이션 관련 상태          //\r\n    const {\r\n        currentPage, currentSection, viewList, viewPageList, totalSection,\r\n        setCurrentPage, setCurrentSection, setTotalList\r\n    } = usePagination<CommentListItem>(3);\r\n\r\n    //          state: 좋아요 리스트 상태          //\r\n    const [favoriteList, setFavoriteList] = useState<FavoriteListItem[]>([]);\r\n    //          state: 좋아요 상태          //\r\n    const [isFavorite, setFavorite] = useState<boolean>(false);\r\n    //          state: 좋아요 상자 보기 상태          //\r\n    const [showFavorite, setShowFavorite] = useState<boolean>(false);\r\n    //          state: 전체 댓글 개수 상태          //\r\n    const [totalCommentCount, setTotalCommentCount] = useState<number>(0);\r\n    //          state: 댓글 상태          //\r\n    const [isComment, setComment] = useState<string>('');\r\n    //          state: 댓글 상자 보기 상태          //\r\n    const [showComment, setShowComment] = useState<boolean>(false);\r\n\r\n    //          function: get favorite list response 처리 함수          //\r\n    const getFavoriteListResponse = (responseBody: GetFavoriteListResponseDto | ResponseDto | null) => {\r\n      if (!responseBody) return;\r\n      const { code } = responseBody;\r\n      if (code === 'NB') alert('존재하지 않는 게시물입니다.');\r\n      if (code === 'DBE') alert('데이터베이스 오류입니다.');\r\n      if (code !== 'SU') return;\r\n\r\n      const { favoriteList } = responseBody as GetFavoriteListResponseDto;\r\n      setFavoriteList(favoriteList);\r\n\r\n      if (!loginUser) {\r\n        setFavorite(false);\r\n        return; \r\n      }\r\n      const isFavorite = favoriteList.findIndex(favorite => favorite.email === loginUser.email) !== -1;\r\n      setFavorite(isFavorite);\r\n    }\r\n    //          function: get comments list response 처리 함수          //\r\n    const getCommentListResponse = (responseBody: GetCommentListResponseDto | ResponseDto | null) => {\r\n      if (!responseBody) return;\r\n      const { code } = responseBody;\r\n      if (code === 'NB') alert('존재하지 않는 게시물입니다.');\r\n      if (code === 'DBE') alert('데이터베이스 오류입니다.');\r\n      if (code !== 'SU') return;\r\n\r\n      const { commentList } = responseBody as GetCommentListResponseDto;\r\n      setTotalList(commentList);\r\n      setTotalCommentCount(commentList.length);\r\n    }\r\n    //          function: put favorite response 처리 함수          //\r\n    const putFavoriteResponse = (responseBody: PutFavoriteResponseDto | ResponseDto | null) => {\r\n      if (!responseBody) return;\r\n      const { code } = responseBody;\r\n      if (code === 'VF') alert('잘못된 접근입니다.');\r\n      if (code === 'NU') alert('존재하지 않는 유저입니다.');\r\n      if (code === 'NB') alert('존재하지 않는 게시물입니다.');\r\n      if (code === 'AF') alert('인증에 실패했습니다.');\r\n      if (code === 'DBE') alert('데이터베이스 오류입니다.');\r\n      if (code !== 'SU') return;\r\n\r\n      if (!boardNumber) return;\r\n      getFavoriteListRequest(boardNumber).then(getFavoriteListResponse);\r\n    }\r\n    //          function: post comment response 처리 함수          //\r\n    const postCommentResponse = (responseBody: PostCommentResponseDto | ResponseDto | null) => {\r\n      if (!responseBody) return;\r\n      const { code } = responseBody;\r\n      if (code === 'VF') alert('잘못된 접근입니다.');\r\n      if (code === 'NU') alert('존재하지 않는 유저입니다.');\r\n      if (code === 'NB') alert('존재하지 않는 게시물입니다.');\r\n      if (code === 'AF') alert('인증에 실패했습니다.');\r\n      if (code === 'DBE') alert('데이터베이스 오류입니다.');\r\n      if (code !== 'SU') return;\r\n\r\n      setComment('');\r\n\r\n      if (!boardNumber) return;\r\n      getCommentListRequest(boardNumber).then(getCommentListResponse);\r\n    }\r\n\r\n    //          event handler: 좋아요 클릭 이벤트 처리           //\r\n    const onFavoriteClickHandler = () => {\r\n      if (!boardNumber || !loginUser || !cookies.accessToken) return;\r\n      putFavoriteRequest(boardNumber, cookies.accessToken).then(putFavoriteResponse);\r\n    }\r\n    //          event handler: 좋아요 상자 보기 클릭 이벤트 처리           //\r\n    const onFavoriteShowClickHandler = () => {\r\n      setShowFavorite(!showFavorite);\r\n    }\r\n    //          event handler: 댓글 상자 보기 클릭 이벤트 처리           //\r\n    const onCommentShowClickHandler = () => {\r\n      setShowComment(!showComment);\r\n    }\r\n    //          event handler: 댓글 작성 버튼 클릭 이벤트 처리           //\r\n    const onCommentSubmitButtonClickHandler = () => {\r\n      if (!isComment || !boardNumber || !loginUser || !cookies.accessToken) return;\r\n      const requestBody: PostCommentRequestDto = { content: isComment };\r\n      postCommentRequest(boardNumber, requestBody, cookies.accessToken).then(postCommentResponse);\r\n    }\r\n    //          event handler: 댓글 변경 이벤트 처리           //\r\n    const onCommentChangeHandler = (event: ChangeEvent<HTMLTextAreaElement>) => {\r\n      const { value } = event.target;\r\n      setComment(value);\r\n      if (!commentRef.current) return;\r\n      commentRef.current.style.height = 'auto';\r\n      commentRef.current.style.height = `${commentRef.current.scrollHeight}px`;\r\n    }\r\n\r\n    //          effect: 게시물 번호 path variable이 바뀔 때 마다 좋아요 및 댓글 리스트 불러오기           //\r\n    useEffect(() =>{\r\n      if (!boardNumber) return;\r\n      getFavoriteListRequest(boardNumber).then(getFavoriteListResponse);\r\n      getCommentListRequest(boardNumber).then(getCommentListResponse)\r\n    }, [boardNumber]);\r\n    \r\n\r\n    //          render: 게시물 상세 하단 컴포넌트 렌더링          //\r\n    return (\r\n      <div id='board-detail-bottom'>\r\n        <div className='board-detail-bottom-button-box'>\r\n          <div className='board-detail-bottom-button-group'>\r\n            <div className='icon-button' onClick={onFavoriteClickHandler}>\r\n              {isFavorite ? \r\n              <div className='icon favorite-fill-icon'></div> : \r\n              <div className='icon favorite-light-icon'></div>\r\n              }\r\n            </div>\r\n            <div className='board-detial-bottom-button-text'>{`좋아요 ${favoriteList.length}`}</div>\r\n            <div className='icon-button' onClick={onFavoriteShowClickHandler}>\r\n              {showFavorite ? \r\n              <div className='icon up-light-icon'></div> : \r\n              <div className='icon down-light-icon'></div>\r\n              }\r\n              \r\n            </div>\r\n          </div>\r\n          <div className='board-detail-bottom-button-group'>\r\n            <div className='icon-button'>\r\n              <div className='icon comment-fill-icon'></div>\r\n            </div>\r\n            <div className='board-detial-bottom-button-text'>{`댓글 ${totalCommentCount}`}</div>\r\n            <div className='icon-button' onClick={onCommentShowClickHandler}>\r\n              {showComment ? \r\n              <div className='icon up-light-icon'></div> : \r\n              <div className='icon down-light-icon'></div>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {showFavorite ? \r\n        <div className='board-detail-bottom-favorite-box'>\r\n          <div className='board-detail-bottom-favorite-container'>\r\n            <div className='board-detail-bottom-favorite-title'>{'좋아요 '}<span className='emphasis'>{favoriteList.length}</span></div>\r\n            <div className='board-detail-bottom-favorite-contents'>\r\n              {favoriteList.map(item => <FavoriteItem favoriteListItem={item} />)}\r\n            </div>\r\n          </div>\r\n        </div> :\r\n        <></>\r\n        }\r\n        {showComment &&\r\n        <div className='board-detail-bottom-comment-box'>\r\n          <div className='board-detail-bottom-comment-container'>\r\n            <div className='board-detail-bottom-comment-title'>{'댓글 '}<span className='emphasis'>{totalCommentCount}</span></div>\r\n            <div className='board-detail-bottom-comment-list-container'>\r\n              {viewList.map(item => <CommentItem commentListItem={item} />)}\r\n            </div>\r\n          </div>\r\n          <div className='divider'></div>\r\n          <div className='board-detail-bottom-comment-pagination-box'>\r\n            <Pagination\r\n            currentPage={currentPage}\r\n            currentSection={currentSection}\r\n            setCurrentPage={setCurrentPage}\r\n            setCurrentSection={setCurrentSection}\r\n            viewPageList={viewPageList}\r\n            totalSection={totalSection}\r\n             />\r\n          </div>\r\n          {loginUser !== null &&\r\n          <div className='board-detail-bottom-comment-input-box'>\r\n            <div className='board-detail-bottom-comment-input-container'>\r\n              <textarea ref={commentRef} className='board-detail-bottom-comment-textarea' placeholder='댓글을 작성해주세요.' value={isComment} onChange={onCommentChangeHandler}/>\r\n              <div className='board-detail-bottom-comment-button-box'>\r\n                <div className={isComment === '' ? 'disable-button' : 'black-button'} onClick={onCommentSubmitButtonClickHandler}>{'댓글달기'}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          }\r\n        </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  //          effect: 게시물 번호 path variable이 바뀔 때 마다 게시물 조회수 증가          //\r\n  let effectFlag = false;\r\n  useEffect(() => {\r\n    if (!boardNumber) return;\r\n    if (effectFlag) {\r\n      return;\r\n    }\r\n    increaseViewCountRequest(boardNumber).then(increaseViewCountResponse);\r\n      effectFlag = true;\r\n  }, [boardNumber]);\r\n\r\n  //          render: 게시물 상세 화면 컴포넌트 렌더링          //\r\n  return (\r\n    <div id='board-detail-wrapper'>\r\n      <div className='board-detail-container'>\r\n        <BoardDetailTop />\r\n        <BoardDetailBottom />\r\n      </div>\r\n    </div>  \r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}