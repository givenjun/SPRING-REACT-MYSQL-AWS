{"ast":null,"code":"import axios from 'axios';\nconst DOMAIN = 'http://localhost:4000';\nconst API_DOMAIN = `${DOMAIN}/api/v1`;\nconst authorization = accessToken => {\n  return {\n    headers: {\n      Authorization: `Bearer ${accessToken}`\n    }\n  };\n};\nconst SIGN_IN_URL = () => `${API_DOMAIN}/auth/sign-in`;\n_c = SIGN_IN_URL;\nconst SIGN_UP_URL = () => `${API_DOMAIN}/auth/sign-up`;\n_c2 = SIGN_UP_URL;\nexport const signInRequest = async requestBody => {\n  const result = await axios.post(SIGN_IN_URL(), requestBody).then(response => {\n    const responseBody = response.data;\n    return responseBody;\n  }).catch(error => {\n    if (!error.response.data) return null;\n    const responseBody = error.response.data;\n    return responseBody;\n  });\n  return result;\n};\nexport const signUpRequest = async requestBody => {\n  const result = await axios.post(SIGN_UP_URL(), requestBody).then(response => {\n    const responseBody = response.data;\n    return responseBody;\n  }).catch(error => {\n    if (!error.response.data) return null;\n    const responseBody = error.response.data;\n    return responseBody;\n  });\n  return result;\n};\nconst GET_BOARD_URL = boardNumber => `${API_DOMAIN}/board/{boardNumber}`;\n_c3 = GET_BOARD_URL;\nconst POST_BOARD_URL = () => `${API_DOMAIN}/board`;\n_c4 = POST_BOARD_URL;\nexport const postBoardRequest = async (requestBody, accessToken) => {\n  const result = await axios.post(POST_BOARD_URL(), requestBody, authorization(accessToken)).then(response => {\n    const responseBody = response.data;\n    return responseBody;\n  }).catch(error => {\n    if (!error.response.data) return null;\n    const responseBody = error.response.data;\n    return responseBody;\n  });\n  return result;\n};\nconst GET_SIGN_IN_USER_URL = () => `${API_DOMAIN}/user`;\n_c5 = GET_SIGN_IN_USER_URL;\nexport const getSignInUserRequest = async accessToken => {\n  const result = await axios.get(GET_SIGN_IN_USER_URL(), authorization(accessToken)).then(response => {\n    const responseBody = response.data;\n    return responseBody;\n  }).catch(error => {\n    if (!error.response.data) return null;\n    const responseBody = error.response.data;\n    return responseBody;\n  });\n  return result;\n};\nconst FILE_DOMAIN = `${DOMAIN}/file`;\nconst FILE_UPLOAD_URL = () => `${FILE_DOMAIN}/upload`;\n_c6 = FILE_UPLOAD_URL;\nconst multipartFormData = {\n  headers: {\n    'Content-Type': 'multipart/form-data'\n  }\n};\nexport const fileUploadRequest = async data => {\n  const result = await axios.post(FILE_UPLOAD_URL(), data, multipartFormData).then(response => {\n    const responseBody = response.data;\n    return responseBody;\n  }).catch(error => {\n    return null;\n  });\n  return result;\n};\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"SIGN_IN_URL\");\n$RefreshReg$(_c2, \"SIGN_UP_URL\");\n$RefreshReg$(_c3, \"GET_BOARD_URL\");\n$RefreshReg$(_c4, \"POST_BOARD_URL\");\n$RefreshReg$(_c5, \"GET_SIGN_IN_USER_URL\");\n$RefreshReg$(_c6, \"FILE_UPLOAD_URL\");","map":{"version":3,"names":["axios","DOMAIN","API_DOMAIN","authorization","accessToken","headers","Authorization","SIGN_IN_URL","_c","SIGN_UP_URL","_c2","signInRequest","requestBody","result","post","then","response","responseBody","data","catch","error","signUpRequest","GET_BOARD_URL","boardNumber","_c3","POST_BOARD_URL","_c4","postBoardRequest","GET_SIGN_IN_USER_URL","_c5","getSignInUserRequest","get","FILE_DOMAIN","FILE_UPLOAD_URL","_c6","multipartFormData","fileUploadRequest","$RefreshReg$"],"sources":["C:/Users/정준/Documents/spring-react-mysql/board-front/src/apis/index.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { SignInRequestDto, SingUpRequestDto } from './request/auth';\r\nimport { SignInResponseDto, SingUpResponseDto } from './response/auth';\r\nimport { ResponseDto } from './response';\r\nimport { GetSignInUserResponseDto } from './response/user';\r\nimport { PostBoardRequestDto } from './request/board';\r\nimport { PostBoardResponseDto } from './response/board';\r\n\r\nconst DOMAIN = 'http://localhost:4000';\r\n\r\nconst API_DOMAIN = `${DOMAIN}/api/v1`;\r\n\r\nconst authorization = (accessToken: string) => {\r\n    return { headers: { Authorization: `Bearer ${accessToken}` } }\r\n}\r\n\r\nconst SIGN_IN_URL = () => `${API_DOMAIN}/auth/sign-in`;\r\nconst SIGN_UP_URL = () => `${API_DOMAIN}/auth/sign-up`;\r\n\r\nexport const signInRequest = async (requestBody: SignInRequestDto) => {\r\n    const result = await axios.post(SIGN_IN_URL(), requestBody)\r\n        .then(response => {\r\n            const responseBody: SignInResponseDto = response.data;\r\n            return responseBody;\r\n        })\r\n        .catch(error => {\r\n            if (!error.response.data) return null;\r\n            const responseBody: ResponseDto = error.response.data;\r\n            return responseBody;\r\n        })\r\n    return result;\r\n}\r\n\r\nexport const signUpRequest = async (requestBody: SingUpRequestDto) => {\r\n    const result = await axios.post(SIGN_UP_URL(), requestBody)\r\n        .then(response => {\r\n            const responseBody: SingUpResponseDto = response.data;\r\n            return responseBody;\r\n        })\r\n        .catch(error => {\r\n            if (!error.response.data) return null;\r\n            const responseBody: ResponseDto = error.response.data;\r\n            return responseBody;\r\n        })\r\n    return result;\r\n}\r\n\r\nconst GET_BOARD_URL = (boardNumber: number | string) => `${API_DOMAIN}/board/{boardNumber}`;\r\nconst POST_BOARD_URL = () => `${API_DOMAIN}/board`;\r\n\r\nexport const postBoardRequest = async (requestBody: PostBoardRequestDto, accessToken: string) => {\r\n    const result = await axios.post(POST_BOARD_URL(), requestBody, authorization(accessToken))\r\n        .then(response => {\r\n            const responseBody: PostBoardResponseDto = response.data;\r\n            return responseBody\r\n        })\r\n        .catch(error => {\r\n            if (!error.response.data) return null;\r\n            const responseBody: ResponseDto = error.response.data;\r\n            return responseBody;\r\n        })\r\n    return result;\r\n}\r\n\r\nconst GET_SIGN_IN_USER_URL = () => `${API_DOMAIN}/user`;\r\n\r\nexport const getSignInUserRequest = async (accessToken: string) => {\r\n    const result = await axios.get(GET_SIGN_IN_USER_URL(), authorization(accessToken))\r\n        .then(response => {\r\n            const responseBody: GetSignInUserResponseDto = response.data;\r\n            return responseBody;\r\n        })\r\n        .catch(error => {\r\n            if (!error.response.data) return null;\r\n            const responseBody: ResponseDto = error.response.data;\r\n            return responseBody;\r\n        });\r\n        return result;\r\n}\r\n\r\nconst FILE_DOMAIN = `${DOMAIN}/file`;\r\n\r\nconst FILE_UPLOAD_URL = () => `${FILE_DOMAIN}/upload`;\r\n\r\nconst multipartFormData = { headers: { 'Content-Type': 'multipart/form-data'} }\r\n\r\nexport const fileUploadRequest = async (data: FormData) => {\r\n    const result = await axios.post(FILE_UPLOAD_URL(), data, multipartFormData)\r\n        .then(response => {\r\n            const responseBody: string = response.data;\r\n            return responseBody;\r\n        })\r\n        .catch(error => {\r\n            return null;\r\n        }) \r\n    return result;\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}